[{"rendered_body":"\u003cp\u003e覚書です。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"tldr\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#tldr\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eTL;DR\u003c/h1\u003e\n\n\u003cp\u003e早いミラーサイトを指定すること。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"インストール\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eインストール\u003c/h1\u003e\n\n\u003cp\u003eミラーサイト（今回はJAIST）からネットインストール用のISOをダウンロードする。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://ftp.jaist.ac.jp/pub/Linux/scientific/7.1/x86_64/iso/\"\u003ehttp://ftp.jaist.ac.jp/pub/Linux/scientific/7.1/x86_64/iso/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eからSL-7.1-x86_64-netinst.isoをダウンロードした\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"date--time\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#date--time\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eDate \u0026amp; Time\u003c/h2\u003e\n\n\u003cp\u003eAsia/Tokyoを選択\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"network--host-name\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#network--host-name\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eNetwork \u0026amp; Host Name\u003c/h2\u003e\n\n\u003cp\u003eVirtualBoxで指定したもの (今回はNAT）を選択\u003cbr\u003e\nホスト名は \"sl\" とした\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"installation-source\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#installation-source\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eInstallation Source\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"http://ftp.jaist.ac.jp/pub/Linux/scientific/7.1/x86_64/os/\"\u003ehttp://ftp.jaist.ac.jp/pub/Linux/scientific/7.1/x86_64/os/\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"software-selection\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#software-selection\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSoftware Selection\u003c/h2\u003e\n\n\u003cp\u003eMinimal installを選択\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"インストール-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eインストール\u003c/h2\u003e\n\n\u003cp\u003eインストール画面で次の２つをやっておく\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003erootパスワードを設定\u003c/li\u003e\n\u003cli\u003euserを作成\u003c/li\u003e\n\u003c/ul\u003e\n","body":"覚書です。\n\n# TL;DR\n早いミラーサイトを指定すること。\n\n# インストール\nミラーサイト（今回はJAIST）からネットインストール用のISOをダウンロードする。\n\nhttp://ftp.jaist.ac.jp/pub/Linux/scientific/7.1/x86_64/iso/\n\nからSL-7.1-x86_64-netinst.isoをダウンロードした\n\n## Date \u0026 Time\nAsia/Tokyoを選択\n\n## Network \u0026 Host Name\nVirtualBoxで指定したもの (今回はNAT）を選択\nホスト名は \"sl\" とした\n\n## Installation Source\nhttp://ftp.jaist.ac.jp/pub/Linux/scientific/7.1/x86_64/os/\n\n## Software Selection\nMinimal installを選択\n\n## インストール\nインストール画面で次の２つをやっておく\n\n- rootパスワードを設定\n- userを作成\n","coediting":false,"created_at":"2015-09-20T10:35:04+09:00","id":"f9ec81db84a0626a7801","private":false,"tags":[{"name":"ScientificLinux","versions":[]}],"title":"VirtualBoxにScientific Linux 7.1を入れる","updated_at":"2015-09-20T10:35:25+09:00","url":"http://qiita.com/mtgto/items/f9ec81db84a0626a7801","user":{"description":null,"facebook_id":null,"followees_count":7,"followers_count":27,"github_login_name":"mtgto","id":"mtgto","items_count":4,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":8846,"profile_image_url":"https://secure.gravatar.com/avatar/260c2b4e477129e8365e3f379da63170?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","twitter_screen_name":"mtgto","website_url":null}},{"rendered_body":"\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/81742/2d1bbfb5-c689-bfcb-fa69-00b1e3e4fd9a.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/81742/2d1bbfb5-c689-bfcb-fa69-00b1e3e4fd9a.png\" alt=\"スクリーンショット.png\"\u003e\u003c/a\u003e\u003cbr\u003e\njsとかcoffeeとか編集してる時は設定の通りになってくれるのにPythonの時だけ無視される。悲しい。\u003cbr\u003e\nPEP8など知らん。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"直す\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%9B%B4%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e直す\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"//atom.io/packages/editorconfig\"\u003eEditorConfig\u003c/a\u003eを入れる\u003c/li\u003e\n\u003cli\u003eコマンドパレットから\u003ccode\u003eEditorConfig: Generate Config\u003c/code\u003eして出てきたファイルを\u003ccode\u003e$HOME\u003c/code\u003eに置く or 以下を置く\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e~/.editorconfig\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"vg\"\u003eroot\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"vg\"\u003etrue\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"vg\"\u003eindent_style\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"vg\"\u003espace\u003c/span\u003e\n\u003cspan class=\"vg\"\u003eindent_size\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"il\"\u003e2\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e3. Atomを再起動\u003c/p\u003e\n","body":"![スクリーンショット.png](https://qiita-image-store.s3.amazonaws.com/0/81742/2d1bbfb5-c689-bfcb-fa69-00b1e3e4fd9a.png)\njsとかcoffeeとか編集してる時は設定の通りになってくれるのにPythonの時だけ無視される。悲しい。\nPEP8など知らん。\n\n# 直す\n0. [EditorConfig](//atom.io/packages/editorconfig)を入れる\n1. コマンドパレットから`EditorConfig: Generate Config`して出てきたファイルを`$HOME`に置く or 以下を置く\n\n```:~/.editorconfig\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\n```\n3\\. Atomを再起動\n","coediting":false,"created_at":"2015-09-20T10:30:21+09:00","id":"2253921e55bbc617d738","private":false,"tags":[{"name":"ATOM","versions":[]},{"name":"EditorConfig","versions":[]}],"title":"AtomでPython編集してる時のインデント幅が4から変わらない","updated_at":"2015-09-20T10:31:07+09:00","url":"http://qiita.com/wh11e7rue/items/2253921e55bbc617d738","user":{"description":"すたでぃーんはしゅけぅ","facebook_id":"","followees_count":7,"followers_count":1,"github_login_name":"wh11e7rue","id":"wh11e7rue","items_count":9,"linkedin_id":"","location":"","name":"","organization":"TENTO","permanent_id":81742,"profile_image_url":"https://avatars.githubusercontent.com/u/12756700?v=3","twitter_screen_name":"wh11e7rue","website_url":""}},{"rendered_body":"\u003cdiv class=\"code-frame\" data-lang=\"txt\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e動作確認\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eWindows 8.1 pro(64bit)\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003esublime text2にてJSON整形ツールを探していた。\u003cbr\u003e\nPrettyJSONというのがあるようだ。\u003c/p\u003e\n\n\u003cp\u003e参考\u003cbr\u003e\n\u003ca href=\"http://blog.morizotter.com/2014/04/02/sublime-text-package-pretty-json-is-good/\"\u003ehttp://blog.morizotter.com/2014/04/02/sublime-text-package-pretty-json-is-good/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eパッケージをインストール後の使い方は以下。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eファイルをSublime Text2で開く\u003c/li\u003e\n\u003cli\u003eSyntaxを Javascript \u0026gt; JSON とする\u003c/li\u003e\n\u003cli\u003eCtrl + Alt + j で整形できる\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/32870/a2881505-00f5-defb-303f-8979de9d8c26.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/32870/a2881505-00f5-defb-303f-8979de9d8c26.png\" alt=\"before.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eが以下になる。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/32870/889eac68-1b9f-9bb7-7b5b-f0a155a31cd2.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/32870/889eac68-1b9f-9bb7-7b5b-f0a155a31cd2.png\" alt=\"after.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e複数のJSON文字列がある時、すべて選択して変換はできないようだ。\u003cbr\u003e\n1つのJSON文字列を選択ごとに Ctrl + Alt + j で変換する。\u003c/p\u003e\n","body":"```txt:動作確認\nWindows 8.1 pro(64bit)\n```\n\nsublime text2にてJSON整形ツールを探していた。\nPrettyJSONというのがあるようだ。\n\n参考\nhttp://blog.morizotter.com/2014/04/02/sublime-text-package-pretty-json-is-good/\n\nパッケージをインストール後の使い方は以下。\n\n1. ファイルをSublime Text2で開く\n2. Syntaxを Javascript \u003e JSON とする\n3. Ctrl + Alt + j で整形できる\n\n\n![before.png](https://qiita-image-store.s3.amazonaws.com/0/32870/a2881505-00f5-defb-303f-8979de9d8c26.png)\n\nが以下になる。\n\n![after.png](https://qiita-image-store.s3.amazonaws.com/0/32870/889eac68-1b9f-9bb7-7b5b-f0a155a31cd2.png)\n\n\n複数のJSON文字列がある時、すべて選択して変換はできないようだ。\n1つのJSON文字列を選択ごとに Ctrl + Alt + j で変換する。\n\n","coediting":false,"created_at":"2015-09-20T10:11:30+09:00","id":"2273cc53eef2e5897856","private":false,"tags":[{"name":"JSON","versions":[]},{"name":"SublimeText2","versions":[]}],"title":"sublime text \u003e JSON整形パッケージ \u003e PrettyJSON","updated_at":"2015-09-20T10:13:23+09:00","url":"http://qiita.com/7of9/items/2273cc53eef2e5897856","user":{"description":"セブンオブナインです。\r\nUnimatrix 01の第三付属物 9の7という識別番号です。Star trek Voyagerの好きなキャラクターです。\r\n\r\nまとめ記事は後日タイトルから内容がわからなくなるため、title検索で見つかるよう個々の記事にしてます。\r\n\r\nいわゆるBorg集合体の有名なセリフから「お前たち（の知識）を吸収する。抵抗は無意味だ」。Thanks in advance.","facebook_id":"","followees_count":7,"followers_count":28,"github_login_name":"yasokada","id":"7of9","items_count":1053,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":32870,"profile_image_url":"https://avatars.githubusercontent.com/u/2020561?v=3","twitter_screen_name":null,"website_url":""}},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"avdmanager\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#avdmanager\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eAVDManager\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"開き方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%96%8B%E3%81%8D%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e開き方\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/18705/94e1552c-a7d9-dd77-311e-022a5a907c47.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/18705/94e1552c-a7d9-dd77-311e-022a5a907c47.png\" alt=\"Screen Shot 2015-09-20 at 09.42.06.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/18705/bac8616d-2472-7ce5-9391-50a90192a551.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/18705/bac8616d-2472-7ce5-9391-50a90192a551.png\" alt=\"Screen Shot 2015-09-20 at 09.43.12.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"デバイス一覧\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9%E4%B8%80%E8%A6%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eデバイス一覧\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/18705/cc1e9231-e5ea-e679-e482-b6aa7616c0ef.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/18705/cc1e9231-e5ea-e679-e482-b6aa7616c0ef.png\" alt=\"Screen Shot 2015-09-20 at 09.38.35.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eCreate Virtual Deviseへ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"select-hardware\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#select-hardware\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSelect Hardware\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/18705/3fb1ef8a-d765-3efb-ca16-8b174a8c9b0e.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/18705/3fb1ef8a-d765-3efb-ca16-8b174a8c9b0e.png\" alt=\"Screen Shot 2015-09-20 at 09.38.26.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e選択します。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"system-image\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#system-image\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSystem Image\u003c/h2\u003e\n\n\u003cp\u003eshow downloadable system images にチェックを入れます。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/18705/1c95e4ba-36e6-c9ca-d8d9-a61f2d7dfdaa.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/18705/1c95e4ba-36e6-c9ca-d8d9-a61f2d7dfdaa.png\" alt=\"Screen Shot 2015-09-20 at 09.47.24.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e必要なものをダウンロードしていきます。\u003c/p\u003e\n\n\u003cp\u003eSystemImagesに戻るとimageが増えています。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/18705/acb7229c-23cf-83f8-da8c-32b882178886.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/18705/acb7229c-23cf-83f8-da8c-32b882178886.png\" alt=\"Screen Shot 2015-09-20 at 09.39.10.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e選択して次へを押していくと追加できます。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/18705/ff539618-d2a0-f850-dd33-d6f69e292f52.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/18705/ff539618-d2a0-f850-dd33-d6f69e292f52.png\" alt=\"Screen Shot 2015-09-20 at 09.40.14.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# AVDManager\n\n## 開き方\n\n![Screen Shot 2015-09-20 at 09.42.06.png](https://qiita-image-store.s3.amazonaws.com/0/18705/94e1552c-a7d9-dd77-311e-022a5a907c47.png)\n\n![Screen Shot 2015-09-20 at 09.43.12.png](https://qiita-image-store.s3.amazonaws.com/0/18705/bac8616d-2472-7ce5-9391-50a90192a551.png)\n\n## デバイス一覧\n\n![Screen Shot 2015-09-20 at 09.38.35.png](https://qiita-image-store.s3.amazonaws.com/0/18705/cc1e9231-e5ea-e679-e482-b6aa7616c0ef.png)\n\nCreate Virtual Deviseへ。\n\n## Select Hardware\n\n![Screen Shot 2015-09-20 at 09.38.26.png](https://qiita-image-store.s3.amazonaws.com/0/18705/3fb1ef8a-d765-3efb-ca16-8b174a8c9b0e.png)\n\n選択します。\n\n## System Image\n\nshow downloadable system images にチェックを入れます。\n\n![Screen Shot 2015-09-20 at 09.47.24.png](https://qiita-image-store.s3.amazonaws.com/0/18705/1c95e4ba-36e6-c9ca-d8d9-a61f2d7dfdaa.png)\n\n必要なものをダウンロードしていきます。\n\nSystemImagesに戻るとimageが増えています。\n\n![Screen Shot 2015-09-20 at 09.39.10.png](https://qiita-image-store.s3.amazonaws.com/0/18705/acb7229c-23cf-83f8-da8c-32b882178886.png)\n\n選択して次へを押していくと追加できます。\n\n![Screen Shot 2015-09-20 at 09.40.14.png](https://qiita-image-store.s3.amazonaws.com/0/18705/ff539618-d2a0-f850-dd33-d6f69e292f52.png)\n\n","coediting":false,"created_at":"2015-09-20T09:52:05+09:00","id":"66726f01b7128ecbeebb","private":false,"tags":[{"name":"Android","versions":[]},{"name":"AndroidStudio","versions":[]},{"name":"emulator","versions":[]}],"title":"[Android] Emulatorの追加","updated_at":"2015-09-20T09:52:05+09:00","url":"http://qiita.com/tsumekoara/items/66726f01b7128ecbeebb","user":{"description":"Japanese web creator.","facebook_id":"","followees_count":13,"followers_count":63,"github_login_name":"tsumekoara","id":"tsumekoara","items_count":220,"linkedin_id":"satomisuyama","location":"","name":"","organization":"","permanent_id":18705,"profile_image_url":"https://pbs.twimg.com/profile_images/378800000052708697/87e0545a700baf5a62a1bd39f5d0ba79_normal.jpeg","twitter_screen_name":"tsumekoara","website_url":""}},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"mysqlでバルクインサートを実行したときのエラー対処法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#mysql%E3%81%A7%E3%83%90%E3%83%AB%E3%82%AF%E3%82%A4%E3%83%B3%E3%82%B5%E3%83%BC%E3%83%88%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E5%AF%BE%E5%87%A6%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMySQLでバルクインサートを実行したときのエラー対処法\u003c/h1\u003e\n\n\u003cp\u003eこんなエラーが出てしまった・・・\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eCommunication link failure: 1153 Got a packet bigger than 'max_allowed_packet' bytes\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSQL文のデータ？がmax_allowed_packetの値を超えてしまった場合に出るエラーのようです。\u003cbr\u003e\n/etc/my.cnfのmax_allowed_packetのサイズを増やしましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"lang\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e/etc/my.cnf\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003emax_allowed_packet=8M\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e編集したら、MySQLを再起動すれば完了となります。\u003c/p\u003e\n","body":"#MySQLでバルクインサートを実行したときのエラー対処法\nこんなエラーが出てしまった・・・\n\n```\nCommunication link failure: 1153 Got a packet bigger than 'max_allowed_packet' bytes\n```\n\nSQL文のデータ？がmax_allowed_packetの値を超えてしまった場合に出るエラーのようです。\n/etc/my.cnfのmax_allowed_packetのサイズを増やしましょう。\n\n```lang:/etc/my.cnf\nmax_allowed_packet=8M\n```\n\n編集したら、MySQLを再起動すれば完了となります。\n","coediting":false,"created_at":"2015-09-20T09:49:42+09:00","id":"68cf068009f7ef2dc10f","private":false,"tags":[{"name":"MySQL","versions":[]},{"name":"SQL","versions":[]}],"title":"MySQLのバルクインサートを実行したときのエラー対処法","updated_at":"2015-09-20T09:49:42+09:00","url":"http://qiita.com/Hiromitsu_Iwata/items/68cf068009f7ef2dc10f","user":{"description":null,"facebook_id":null,"followees_count":0,"followers_count":0,"github_login_name":null,"id":"Hiromitsu_Iwata","items_count":3,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":92473,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/92473/95fbfd843b50881a5b3b2b96da66da0b104c28fa/medium.png?1441801525","twitter_screen_name":null,"website_url":null}},{"rendered_body":"\u003cp\u003e新人研修とかやってると、なかなかnullの概念を彼らが理解できないので、まとめてみました。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"nullとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#null%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003enullとは\u003c/h1\u003e\n\n\u003cp\u003enullは、どこも参照していないことを示す値。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"どこで出てくるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A9%E3%81%93%E3%81%A7%E5%87%BA%E3%81%A6%E3%81%8F%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eどこで出てくるか\u003c/h1\u003e\n\n\u003cp\u003e参照型の変数には規定値としてnullが代入されている。\u003cbr\u003e\n※Cでは、nullはfalseや0の意味を持ちますが、C#はそのようなことはない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"nullと空文字は違うよ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#null%E3%81%A8%E7%A9%BA%E6%96%87%E5%AD%97%E3%81%AF%E9%81%95%E3%81%86%E3%82%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003enullと空文字は違うよ\u003c/h1\u003e\n\n\u003cp\u003eよく間違えるのが、nullと空文字。\u003cbr\u003e\nnullは記述のように、どこにも参照していないことを示す値であって、空文字（\"\"）は「長さがゼロの文字列」である。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"理解を深める為の例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%90%86%E8%A7%A3%E3%82%92%E6%B7%B1%E3%82%81%E3%82%8B%E7%82%BA%E3%81%AE%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e理解を深める為の例\u003c/h1\u003e\n\n\u003cp\u003e次のようにnewで初期化しないでオブジェクト変数を参照すると、その値がnullのため、エラーになる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"csharp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestA\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eMain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003etestB\u003c/span\u003e \u003cspan class=\"n\"\u003etb\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003etestB\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eConsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWriteLine\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003etestB\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e上記の例で警告が出るのは当たり前だが、プログラムの流れによっては必ずしも有効な参照先が入っていないかもしれない。\u003cbr\u003e\n値が正しいかが不明な場合は、tbがnullかどうかのチェックを行う。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"csharp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e        \u003cspan class=\"n\"\u003etestB\u003c/span\u003e \u003cspan class=\"n\"\u003etb\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003etestB\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etb\u003c/span\u003e \u003cspan class=\"p\"\u003e!=\u003c/span\u003e \u003cspan class=\"k\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eConsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWriteLine\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eifで評価できるのは理論値のみ。\u003cbr\u003e\nCのように「if(a)」や「if(!a)」のような書き方はできないのでご注意を！\u003c/p\u003e\n","body":"新人研修とかやってると、なかなかnullの概念を彼らが理解できないので、まとめてみました。\n#nullとは\nnullは、どこも参照していないことを示す値。\n#どこで出てくるか\n参照型の変数には規定値としてnullが代入されている。\n※Cでは、nullはfalseや0の意味を持ちますが、C#はそのようなことはない。\n#nullと空文字は違うよ\nよく間違えるのが、nullと空文字。\nnullは記述のように、どこにも参照していないことを示す値であって、空文字（\"\"）は「長さがゼロの文字列」である。\n#理解を深める為の例\n次のようにnewで初期化しないでオブジェクト変数を参照すると、その値がnullのため、エラーになる。\n\n```csharp\n\n    class TestA\n    {\n        static void Main(string[] args)\n        {\n            testB tb = new testB();\n            Console.WriteLine(tb.x);\n        }\n    }\n\n    class testB\n    {\n        public string x;\n    }\n```\n\n上記の例で警告が出るのは当たり前だが、プログラムの流れによっては必ずしも有効な参照先が入っていないかもしれない。\n値が正しいかが不明な場合は、tbがnullかどうかのチェックを行う。\n\n```csharp\n\n        testB tb = new testB();\n        if (tb != null)\n        {\n            Console.WriteLine(tb.x);\n        }\n\n```\n\nifで評価できるのは理論値のみ。\nCのように「if(a)」や「if(!a)」のような書き方はできないのでご注意を！\n","coediting":false,"created_at":"2015-09-20T09:31:34+09:00","id":"d785b039d8fc202ffdc6","private":false,"tags":[{"name":"C#","versions":[]}],"title":"【C#】結局nullって何やねん。","updated_at":"2015-09-20T09:37:38+09:00","url":"http://qiita.com/yuyadayo/items/d785b039d8fc202ffdc6","user":{"description":null,"facebook_id":null,"followees_count":1,"followers_count":0,"github_login_name":null,"id":"yuyadayo","items_count":1,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":10506,"profile_image_url":"https://pbs.twimg.com/profile_images/497975664918540288/odsKoFQn_normal.jpeg","twitter_screen_name":"yuyadayo","website_url":null}},{"rendered_body":"\u003cp\u003e現在、AWSではELBとオートスケールでのBlueGreenDeploymentが非常に簡単にできるようになりました。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://dev.classmethod.jp/cloud/aws/bluegreen-devployment-by-elb/\"\u003eAuto Scaling環境でのBlue-Green Deploymentの切替がAWS ELBでできるようになりました\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e上記に記載されているようにオートスケールに紐づくELBを変えれるようになったことでCLIやAPIを使って簡単にBlueGreenDeploymentを行う事ができるようになっています。\u003c/p\u003e\n\n\u003cp\u003e話は変わって、最近ElasticBeanstalkを使ってみようという話があり、ElasticBeanstalkでBlueGreenDeploymentを行う方法を調べた所、CNAME Swapという機能があり、この機能を使う事でBlueGreenDeploymentができそうでした。(上記のELBの向き先を変えるのではなく、CNAMEを変える方式)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.aws.amazon.com/ja_jp/elasticbeanstalk/latest/dg/using-features.CNAMESwap.html\"\u003eダウンタイムなしで新しいアプリケーションバージョンをデプロイする（CNAME スワップ）\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://dev.classmethod.jp/cloud/aws/beanstalk-cname-swap/\"\u003eElastic BeanstalkのCNAME Swapを試してみる\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e上記を実際に確認してみたのでその時のメモ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"やること\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eやること\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eElasticBeanstalkを操作するebコマンドの設定をしたEC2を起動（ローカル環境でも良いと思います）\u003c/li\u003e\n\u003cli\u003eBlue環境(本番環境)にデプロイ\u003c/li\u003e\n\u003cli\u003eGreen環境(テスト環境)にデプロイ\u003c/li\u003e\n\u003cli\u003eCNAME Swapを使ってGreen環境をBlue環境のURLでも確認できるようにする\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"準備\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%BA%96%E5%82%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e準備\u003c/h1\u003e\n\n\u003cp\u003e新規に作成したAmazonLinuxのEC2上でebコマンドを使ってやってみます。\u003c/p\u003e\n\n\u003cp\u003eIAMの設定を実施後、EC2を起動します。\u003cbr\u003e\nElasticBeanstalkで利用するIAMの詳細については以下に記載があります。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.aws.amazon.com/ja_jp/elasticbeanstalk/latest/dg/concepts-roles.html?console_help=true\"\u003eサービスロール、インスタンスプロファイル、ユーザーポリシー\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"iamロールの作成ebを操作するec2用\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#iam%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%AE%E4%BD%9C%E6%88%90eb%E3%82%92%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8Bec2%E7%94%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eIAMロールの作成(ebを操作するEC2用)\u003c/h2\u003e\n\n\u003cp\u003eEC2からebコマンドを実行するのでその権限を持ったIAMロールを作成します。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eRoles-\u0026gt;Create New Role\u003c/li\u003e\n\u003cli\u003e任意のロール名を設定\u003c/li\u003e\n\u003cli\u003eSelect Role TypedではAmazonEC2を選択\u003c/li\u003e\n\u003cli\u003eAttach PolicyではAWSElasticBeanstalkFullAccessを設定\u003c/li\u003e\n\u003cli\u003eCreate role\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e上記にはIAMロールを作成する権限はないので次の項で利用するロールをあらかじめ作成しておきます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"elasticbeanstalkで利用されるサービスロールとiamロールの作成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#elasticbeanstalk%E3%81%A7%E5%88%A9%E7%94%A8%E3%81%95%E3%82%8C%E3%82%8B%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%A8iam%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%AE%E4%BD%9C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eElasticBeanstalkで利用されるサービスロールとIAMロールの作成\u003c/h2\u003e\n\n\u003cp\u003eElasticBeanstalkで利用されるサービスロールとIAMロールを予め作成します。\u003c/p\u003e\n\n\u003cp\u003eIAMの画面から頑張ってやる方法もあると思うのですが、マネージメントコンソールからElasticBenastalkを作成する途中で作成できる機能を利用します。\u003c/p\u003e\n\n\u003cp\u003eマネージメントコンソールでElasticBeanstalkの画面を表示します。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/20193/ced98dac-baf7-423f-b924-6c8dac0fa6d2.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/20193/ced98dac-baf7-423f-b924-6c8dac0fa6d2.png\" alt=\"Screen Shot 2015-09-19 at 2.14.45 PM.png\" title=\"Screen Shot 2015-09-19 at 2.14.45 PM.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eまだ一つもElasticBeanstalkでアプリを作成していない場合、上記のような画面になっているので画面右上の「Create Appliction」を選択して任意のアプリケーションを作成します。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate New Application\u003c/li\u003e\n\u003cli\u003e任意のアプリケーション名を入力\u003c/li\u003e\n\u003cli\u003eCreate web serverを選択\u003c/li\u003e\n\u003cli\u003e以降、Permissionという下記画面までは適当に入力（どうせ作成をキャンセルするので）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/20193/86a0a2d9-241e-a318-20d6-4f432ae9127e.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/20193/86a0a2d9-241e-a318-20d6-4f432ae9127e.png\" alt=\"Screen Shot 2015-09-19 at 2.01.26 PM.png\" title=\"Screen Shot 2015-09-19 at 2.01.26 PM.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e上記でまだInstanceProfileとService roleが作成されていない場合には新規作成する旨が記載されているので作成します。\u003c/p\u003e\n\n\u003cp\u003e作成が終われれば、CancelでElasticBeanstalkの操作をキャンセルします。\u003c/p\u003e\n\n\u003cp\u003e上記操作ではアプリケーションが削除がされていないのでAction-\u0026gt;Delete Applicationでアプリも削除しておきます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ec2の起動\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ec2%E3%81%AE%E8%B5%B7%E5%8B%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eEC2の起動\u003c/h2\u003e\n\n\u003cp\u003eebを操作できるEC2を起動します。\u003cbr\u003e\nセットアップはUserDataでやってしまいます。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOS-\u0026gt;Amazon Linux AMI 2015.03.1\u003c/li\u003e\n\u003cli\u003eIAM Role-\u0026gt;「IAMロールの作成(ebを操作するEC2用)」で作成したIAMロールを設定\u003c/li\u003e\n\u003cli\u003eUserData-\u0026gt;以下の通り\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e#!/bin/bash\n\nEC2_HOME=\"/home/ec2-user/\"\n\n# install packages\nyum install lynx git -y\n\n# set AWS SDK and CLI configuration\nmkdir $EC2_HOME.aws\ncat \u0026gt; $EC2_HOME.aws/config \u0026lt;\u0026lt; EOS\n[default]\noutput = json\nregion = ap-northeast-1\nEOS\nchown -R ec2-user:ec2-user $EC2_HOME.aws\n\n# install eb command\npip install --upgrade pip\n/usr/local/bin/pip install awsebcli\n\n# completion eb command(for Bash)\necho \"source /usr/local/bin/eb_completion.bash\" \u0026gt;\u0026gt; $EC2_HOME.bashrc\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"blue環境にデプロイする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#blue%E7%92%B0%E5%A2%83%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBlue環境にデプロイする\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/toshihirock/items/593e17d42a8d1d533a49\"\u003eebコマンドを使ってElasticBeanstalkでデプロイしてみる\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e以前書いた以下の項を実施します。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWebアプリの作成\u003c/li\u003e\n\u003cli\u003eアプリケーションの設定\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eざっくり記載。詳細は記事を参照。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$mkdir -p git/elastic-beanstalk\n$cd git/elastic-beanstalk\n$git init .\n$vi index.php\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"lang\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eindex.php\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u0026lt;html\u0026gt;\n \u0026lt;head\u0026gt;\n  \u0026lt;title\u0026gt;PHP Test\u0026lt;/title\u0026gt;\n \u0026lt;/head\u0026gt;\n \u0026lt;body\u0026gt;\n \u0026lt;?php echo '\u0026lt;p\u0026gt;Hello World!\u0026lt;/p\u0026gt;'; ?\u0026gt; \n \u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt; \n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$git add index.php\n$git commit -m \"initial check-in\"\n$eb init\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e上記でデプロイするアプリが作成できました。\u003cbr\u003e\nElasticBenstalkでは一つのアプリケーションに複数の環境を紐づけることができます。（検証、本番など）\u003c/p\u003e\n\n\u003cp\u003e今回は上記の環境という概念でBlueとGreenを作成して切り替えを行います。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eeb create\u003c/code\u003eコマンドを使ってBlue環境の作成とデプロイを行います。デプロイ時にELBやインスタンスの起動など複数のリソースを利用するため、利用できるまで少し時間がかかります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb create\nEnter Environment Name\n(default is elastic-beanstalk-dev): elastic-beanstalk-blue\nEnter DNS CNAME prefix\n(default is elastic-beanstalk-blue):\n\n...以降設定のログ\n\n\nINFO: Successfully launched environment: elastic-beanstalk-blue\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e完了したらeb openコマンドでアクセスして確認してみます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb open\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e上記でHelloWorld!という表示が確認できればOKです。\u003c/p\u003e\n\n\u003cp\u003e実際にアクセスする際のURLも確認できます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb status\nEnvironment details for: elastic-beanstalk-blue\n  Application name: elastic-beanstalk\n  Region: ap-northeast-1\n  Deployed Version: bc92\n  Environment ID: e-87itv3u3d3\n  Platform: 64bit Amazon Linux 2015.03 v2.0.1 running PHP 5.6\n  Tier: WebServer-Standard\n  CNAME: elastic-beanstalk-blue.elasticbeanstalk.com\n  Updated: 2015-09-19 06:04:31.352000+00:00\n  Status: Ready\n  Health: Green\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e上記のCNAMEとなっている部分でのアクセスも可能です。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"green環境にデプロイする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#green%E7%92%B0%E5%A2%83%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGreen環境にデプロイする\u003c/h1\u003e\n\n\u003cp\u003e次にGreen環境を作成し、こちらに新しいアプリをデプロイします。\u003c/p\u003e\n\n\u003cp\u003eまず、Green環境の構築およびデプロイを行います。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb create  elastic-beanstalk-green\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれでBlue環境と同じ環境となっているGreen環境の構築とアプリのデプロイを行いました。\u003c/p\u003e\n\n\u003cp\u003e次にCLIで現在設定されている操作対象の環境を確認します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ eb list\n* elastic-beanstalk-blue\nelastic-beanstalk-green\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e現在はBlue環境を操作する形になっているのですが、今後はGreen環境で操作をメインにしたいので設定を変更します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb use elastic-beanstalk-green\n\n$eb list\nelastic-beanstalk-blue\n* elastic-beanstalk-green\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e設定が変わったのでGreen環境の状態を確認します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb open\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e現在はBlue環境と同じ情報が表示されるかと思います。\u003cbr\u003e\nなお、デフォルトの環境を変えなくても以下のよう引数に環境を指定することでも指定環境の操作が可能です。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb open elastic-beanstalk-blue\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"green環境に最新のアプリをデプロイする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#green%E7%92%B0%E5%A2%83%E3%81%AB%E6%9C%80%E6%96%B0%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGreen環境に最新のアプリをデプロイする\u003c/h1\u003e\n\n\u003cp\u003eソースコードを変更して最新状態にし、デプロイします。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"lang\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eindex.php\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u0026lt;html\u0026gt;\n \u0026lt;head\u0026gt;\n  \u0026lt;title\u0026gt;PHP Test\u0026lt;/title\u0026gt;\n \u0026lt;/head\u0026gt;\n \u0026lt;body\u0026gt;\n \u0026lt;?php echo '\u0026lt;p\u0026gt;Hello World!!!!!\u0026lt;\u0026lt;/p\u0026gt;'; ?\u0026gt; \n \u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$git add .\n$git commit -m \"hoge fuga\"\n$eb deploy\n\neb deploy\nCreating application version archive \"2a32\".\nUploading elastic-beanstalk/2a32.zip to S3. This may take a while.\nUpload Complete.\nINFO: Environment update is starting.\nINFO: Deploying new version to instance(s).\nINFO: New application version was deployed to running EC2 instances.\nINFO: Environment update completed successfully.\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eデプロイ後、\u003ccode\u003eeb open\u003c/code\u003eでHello World!!!!!と表示されればOKです。\u003c/p\u003e\n\n\u003cp\u003e今回の例ではGreen環境はテスト環境なので、開発の都度deployし、開発者のみアクセスしてテストを行うような開発スタイルが可能です。その間もBlue環境では本番環境が問題なく動作しています。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"cname-swapでblue環境のurlでgreen環境にアクセスする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cname-swap%E3%81%A7blue%E7%92%B0%E5%A2%83%E3%81%AEurl%E3%81%A7green%E7%92%B0%E5%A2%83%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCNAME SwapでBlue環境のURLでGreen環境にアクセスする\u003c/h1\u003e\n\n\u003cp\u003eGreen環境のアプリのテストも終わったので、本番環境(Blue環境)へ投入するぞ!というタイミングでCNAME Swapを使ってBlue環境へのアクセスURLでGreen環境へ向くようにします。\u003c/p\u003e\n\n\u003cp\u003eまず、Blue環境の状態を再度、ブラウザなどで確認します。(アクセスURLはeb statusコマンドのCNAME)問題なければ「Hello World!」と表示されるはずです。今回の例ではそれぞれのCNAMEは以下のようになっているとします。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBlue-\u0026gt;\u003ca href=\"http://elastic-beanstalk-blue.elasticbeanstalk.com/\"\u003ehttp://elastic-beanstalk-blue.elasticbeanstalk.com/\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGreen-\u0026gt;\u003ca href=\"http://elastic-beanstalk-green-kqzyhtmmze.elasticbeanstalk.com/\"\u003ehttp://elastic-beanstalk-green-kqzyhtmmze.elasticbeanstalk.com/\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eでは\u003ccode\u003eeb swap\u003c/code\u003eコマンドを使ってBlueとGreenのCNAMEを変更します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ eb list\nelastic-beanstalk-blue\n* elastic-beanstalk-green\n\n$eb swap elastic-beanstalk-blue\nERROR: InvalidShapeReferenceError :: Invalid model, missing shape reference: OrderedDict([(u'type', u'structure'), (u'members', OrderedDict([(u'User', OrderedDict([(u'shape', u'Double')])), (u'Nice', OrderedDict([(u'shape', u'Double')])), (u'System', OrderedDict([(u'shape', u'Double')])), (u'Idle', OrderedDict([(u'shape', u'Double')])), (u'IOWait', OrderedDict([(u'shape', u'Double')])), (u'IRQ', OrderedDict([(u'shape', u'Double')])), (u'SoftIRQ', OrderedDict([(u'shape', u'Double')]))]))])\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eまさかの内部エラー。。。ぐぬぬぬ・・・他の方も同様の事象が発生しているようなのでebの問題なのかもしれません。。\u003c/p\u003e\n\n\u003cp\u003eAWS CLIでもできるようなのでそちらでやってみます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$aws elasticbeanstalk swap-environment-cnames --source-environment-name elastic-beanstalk-green --destination-environment-name elastic-beanstalk-blue\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれで切り替わったはずなので確認します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb status\nEnvironment details for: elastic-beanstalk-green\n  Application name: elastic-beanstalk\n  Region: ap-northeast-1\n  Deployed Version: 2a32\n  Environment ID: e-z5u9efeudu\n  Platform: 64bit Amazon Linux 2015.03 v2.0.1 running PHP 5.6\n  Tier: WebServer-Standard\n  CNAME: elastic-beanstalk-blue.elasticbeanstalk.com\n  Updated: 2015-09-19 08:39:53.378000+00:00\n  Status: Ready\n  Health: Green\n\n$eb status elastic-beanstalk-blue\nEnvironment details for: elastic-beanstalk-blue\n  Application name: elastic-beanstalk\n  Region: ap-northeast-1\n  Deployed Version: bc92\n  Environment ID: e-87itv3u3d3\n  Platform: 64bit Amazon Linux 2015.03 v2.0.1 running PHP 5.6\n  Tier: WebServer-Standard\n  CNAME: elastic-beanstalk-green-kqzyhtmmze.elasticbeanstalk.com\n  Updated: 2015-09-19 08:39:53.378000+00:00\n  Status: Ready\n  Health: Green\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eGreen環境とBlue環境のCNAMEが変わっているのが確認できます。\u003c/p\u003e\n\n\u003cp\u003eまた、Blue環境（本番）のURL\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://elastic-beanstalk-blue.elasticbeanstalk.com/\"\u003ehttp://elastic-beanstalk-blue.elasticbeanstalk.com/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eにアクセスすることで「Hello World!!!!!!」という表示がされます。なお、内部的にRoute53のCNAMEの付け替えとなっているようで、切り替え後すぐに表示が変わらない場合もありますが、少し時間が経てば表示ができるはずです。\u003c/p\u003e\n\n\u003cp\u003e最新環境で動作が問題ないよであればBlue環境は破棄し、新規に新環境を作ってテスト、リリース時にCNAME Swapにより切り替えとすれば最初に割り当てたURLでの運用が可能です。(実際はRoute53でドメインを割り当てると思いますが。。）\u003c/p\u003e\n\n\u003cp\u003eまた、仮に最新版で動作に不具合がある場合もCNAME Swapを再度行うことで旧環境に戻すことも簡単にでき、安心に運用ができます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"掃除\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8E%83%E9%99%A4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e掃除\u003c/h1\u003e\n\n\u003cp\u003e以下で今回作成したそれぞれの環境とアプリケーションを削除します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$eb terminate elastic-beanstalk-blue\n\n$eb terminate elastic-beanstalk-green\n\n# 上記が消えてからアプリケーションは削除\n$aws elasticbeanstalk delete-application --application-name elastic-beanstalk\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"最後に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e最後に\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eCLIによる操作(ebコマンドとAWS CLI)のみでアプリのデプロイが簡単にできるのは面白い\u003c/li\u003e\n\u003cli\u003eCNAME Swapで簡単にBlueGreenDeploymentができる\u003c/li\u003e\n\u003cli\u003eDockerやECSもElasticBeanstalkはサポートしているのでDockerのBlueGreenDeploymentも簡単にできる？\u003c/li\u003e\n\u003cli\u003e今ならELBの付け替えができるのでElasticBeanstalkでも簡単にやれる仕組みが欲しい（やろうと思えばできるような気もしますが。。。）\u003c/li\u003e\n\u003c/ul\u003e\n","body":"現在、AWSではELBとオートスケールでのBlueGreenDeploymentが非常に簡単にできるようになりました。\n\n[Auto Scaling環境でのBlue-Green Deploymentの切替がAWS ELBでできるようになりました](http://dev.classmethod.jp/cloud/aws/bluegreen-devployment-by-elb/)\n\n上記に記載されているようにオートスケールに紐づくELBを変えれるようになったことでCLIやAPIを使って簡単にBlueGreenDeploymentを行う事ができるようになっています。\n\n話は変わって、最近ElasticBeanstalkを使ってみようという話があり、ElasticBeanstalkでBlueGreenDeploymentを行う方法を調べた所、CNAME Swapという機能があり、この機能を使う事でBlueGreenDeploymentができそうでした。(上記のELBの向き先を変えるのではなく、CNAMEを変える方式)\n\n+ [ダウンタイムなしで新しいアプリケーションバージョンをデプロイする（CNAME スワップ）](https://docs.aws.amazon.com/ja_jp/elasticbeanstalk/latest/dg/using-features.CNAMESwap.html)\n+ [Elastic BeanstalkのCNAME Swapを試してみる](http://dev.classmethod.jp/cloud/aws/beanstalk-cname-swap/)\n\n上記を実際に確認してみたのでその時のメモ。\n\n# やること\n\n+ ElasticBeanstalkを操作するebコマンドの設定をしたEC2を起動（ローカル環境でも良いと思います）\n+ Blue環境(本番環境)にデプロイ\n+ Green環境(テスト環境)にデプロイ\n+ CNAME Swapを使ってGreen環境をBlue環境のURLでも確認できるようにする\n\n# 準備\n\n新規に作成したAmazonLinuxのEC2上でebコマンドを使ってやってみます。\n\nIAMの設定を実施後、EC2を起動します。\nElasticBeanstalkで利用するIAMの詳細については以下に記載があります。\n\n[サービスロール、インスタンスプロファイル、ユーザーポリシー](https://docs.aws.amazon.com/ja_jp/elasticbeanstalk/latest/dg/concepts-roles.html?console_help=true)\n\n## IAMロールの作成(ebを操作するEC2用)\n\nEC2からebコマンドを実行するのでその権限を持ったIAMロールを作成します。\n\n+ Roles-\u003eCreate New Role\n+ 任意のロール名を設定\n+ Select Role TypedではAmazonEC2を選択\n+ Attach PolicyではAWSElasticBeanstalkFullAccessを設定\n+ Create role\n\n上記にはIAMロールを作成する権限はないので次の項で利用するロールをあらかじめ作成しておきます。\n\n## ElasticBeanstalkで利用されるサービスロールとIAMロールの作成\n\nElasticBeanstalkで利用されるサービスロールとIAMロールを予め作成します。\n\nIAMの画面から頑張ってやる方法もあると思うのですが、マネージメントコンソールからElasticBenastalkを作成する途中で作成できる機能を利用します。\n\nマネージメントコンソールでElasticBeanstalkの画面を表示します。\n\n![Screen Shot 2015-09-19 at 2.14.45 PM.png](https://qiita-image-store.s3.amazonaws.com/0/20193/ced98dac-baf7-423f-b924-6c8dac0fa6d2.png \"Screen Shot 2015-09-19 at 2.14.45 PM.png\")\n\nまだ一つもElasticBeanstalkでアプリを作成していない場合、上記のような画面になっているので画面右上の「Create Appliction」を選択して任意のアプリケーションを作成します。\n\n+ Create New Application\n+ 任意のアプリケーション名を入力\n+ Create web serverを選択\n+ 以降、Permissionという下記画面までは適当に入力（どうせ作成をキャンセルするので）\n\n![Screen Shot 2015-09-19 at 2.01.26 PM.png](https://qiita-image-store.s3.amazonaws.com/0/20193/86a0a2d9-241e-a318-20d6-4f432ae9127e.png \"Screen Shot 2015-09-19 at 2.01.26 PM.png\")\n\n\n上記でまだInstanceProfileとService roleが作成されていない場合には新規作成する旨が記載されているので作成します。\n\n作成が終われれば、CancelでElasticBeanstalkの操作をキャンセルします。\n\n上記操作ではアプリケーションが削除がされていないのでAction-\u003eDelete Applicationでアプリも削除しておきます。\n\n\n## EC2の起動\n\nebを操作できるEC2を起動します。\nセットアップはUserDataでやってしまいます。\n\n+ OS-\u003eAmazon Linux AMI 2015.03.1\n+ IAM Role-\u003e「IAMロールの作成(ebを操作するEC2用)」で作成したIAMロールを設定\n+ UserData-\u003e以下の通り\n\n```\n#!/bin/bash\n\nEC2_HOME=\"/home/ec2-user/\"\n\n# install packages\nyum install lynx git -y\n\n# set AWS SDK and CLI configuration\nmkdir $EC2_HOME.aws\ncat \u003e $EC2_HOME.aws/config \u003c\u003c EOS\n[default]\noutput = json\nregion = ap-northeast-1\nEOS\nchown -R ec2-user:ec2-user $EC2_HOME.aws\n\n# install eb command\npip install --upgrade pip\n/usr/local/bin/pip install awsebcli\n\n# completion eb command(for Bash)\necho \"source /usr/local/bin/eb_completion.bash\" \u003e\u003e $EC2_HOME.bashrc\n```\n\n# Blue環境にデプロイする\n\n[ebコマンドを使ってElasticBeanstalkでデプロイしてみる](http://qiita.com/toshihirock/items/593e17d42a8d1d533a49)\n\n以前書いた以下の項を実施します。\n\n+ Webアプリの作成\n+ アプリケーションの設定\n\nざっくり記載。詳細は記事を参照。\n\n```\n$mkdir -p git/elastic-beanstalk\n$cd git/elastic-beanstalk\n$git init .\n$vi index.php\n```\n\n```lang:index.php\n\u003chtml\u003e\n \u003chead\u003e\n  \u003ctitle\u003ePHP Test\u003c/title\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003c?php echo '\u003cp\u003eHello World!\u003c/p\u003e'; ?\u003e \n \u003c/body\u003e\n\u003c/html\u003e \n```\n\n```\n$git add index.php\n$git commit -m \"initial check-in\"\n$eb init\n```\n\n\n上記でデプロイするアプリが作成できました。\nElasticBenstalkでは一つのアプリケーションに複数の環境を紐づけることができます。（検証、本番など）\n\n今回は上記の環境という概念でBlueとGreenを作成して切り替えを行います。\n\n`eb create`コマンドを使ってBlue環境の作成とデプロイを行います。デプロイ時にELBやインスタンスの起動など複数のリソースを利用するため、利用できるまで少し時間がかかります。\n\n```\n$eb create\nEnter Environment Name\n(default is elastic-beanstalk-dev): elastic-beanstalk-blue\nEnter DNS CNAME prefix\n(default is elastic-beanstalk-blue):\n\n...以降設定のログ\n\n\nINFO: Successfully launched environment: elastic-beanstalk-blue\n```\n\n完了したらeb openコマンドでアクセスして確認してみます。\n\n```\n$eb open\n```\n\n上記でHelloWorld!という表示が確認できればOKです。\n\n実際にアクセスする際のURLも確認できます。\n\n```\n$eb status\nEnvironment details for: elastic-beanstalk-blue\n  Application name: elastic-beanstalk\n  Region: ap-northeast-1\n  Deployed Version: bc92\n  Environment ID: e-87itv3u3d3\n  Platform: 64bit Amazon Linux 2015.03 v2.0.1 running PHP 5.6\n  Tier: WebServer-Standard\n  CNAME: elastic-beanstalk-blue.elasticbeanstalk.com\n  Updated: 2015-09-19 06:04:31.352000+00:00\n  Status: Ready\n  Health: Green\n```\n\n上記のCNAMEとなっている部分でのアクセスも可能です。\n\n# Green環境にデプロイする\n\n次にGreen環境を作成し、こちらに新しいアプリをデプロイします。\n\nまず、Green環境の構築およびデプロイを行います。\n\n```\n$eb create  elastic-beanstalk-green\n```\n\nこれでBlue環境と同じ環境となっているGreen環境の構築とアプリのデプロイを行いました。\n\n次にCLIで現在設定されている操作対象の環境を確認します。\n\n```\n$ eb list\n* elastic-beanstalk-blue\nelastic-beanstalk-green\n```\n\n現在はBlue環境を操作する形になっているのですが、今後はGreen環境で操作をメインにしたいので設定を変更します。\n\n```\n$eb use elastic-beanstalk-green\n\n$eb list\nelastic-beanstalk-blue\n* elastic-beanstalk-green\n```\n\n設定が変わったのでGreen環境の状態を確認します。\n\n```\n$eb open\n```\n\n現在はBlue環境と同じ情報が表示されるかと思います。\nなお、デフォルトの環境を変えなくても以下のよう引数に環境を指定することでも指定環境の操作が可能です。\n\n```\n$eb open elastic-beanstalk-blue\n```\n\n# Green環境に最新のアプリをデプロイする\n\nソースコードを変更して最新状態にし、デプロイします。\n\n```lang:index.php\n\u003chtml\u003e\n \u003chead\u003e\n  \u003ctitle\u003ePHP Test\u003c/title\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003c?php echo '\u003cp\u003eHello World!!!!!\u003c\u003c/p\u003e'; ?\u003e \n \u003c/body\u003e\n\u003c/html\u003e\n```\n\n```\n$git add .\n$git commit -m \"hoge fuga\"\n$eb deploy\n\neb deploy\nCreating application version archive \"2a32\".\nUploading elastic-beanstalk/2a32.zip to S3. This may take a while.\nUpload Complete.\nINFO: Environment update is starting.\nINFO: Deploying new version to instance(s).\nINFO: New application version was deployed to running EC2 instances.\nINFO: Environment update completed successfully.\n```\n\nデプロイ後、`eb open`でHello World!!!!!と表示されればOKです。\n\n今回の例ではGreen環境はテスト環境なので、開発の都度deployし、開発者のみアクセスしてテストを行うような開発スタイルが可能です。その間もBlue環境では本番環境が問題なく動作しています。\n\n# CNAME SwapでBlue環境のURLでGreen環境にアクセスする\n\nGreen環境のアプリのテストも終わったので、本番環境(Blue環境)へ投入するぞ!というタイミングでCNAME Swapを使ってBlue環境へのアクセスURLでGreen環境へ向くようにします。\n\nまず、Blue環境の状態を再度、ブラウザなどで確認します。(アクセスURLはeb statusコマンドのCNAME)問題なければ「Hello World!」と表示されるはずです。今回の例ではそれぞれのCNAMEは以下のようになっているとします。\n\n+ Blue-\u003ehttp://elastic-beanstalk-blue.elasticbeanstalk.com/\n+ Green-\u003ehttp://elastic-beanstalk-green-kqzyhtmmze.elasticbeanstalk.com/\n\nでは`eb swap`コマンドを使ってBlueとGreenのCNAMEを変更します。\n\n```\n$ eb list\nelastic-beanstalk-blue\n* elastic-beanstalk-green\n\n$eb swap elastic-beanstalk-blue\nERROR: InvalidShapeReferenceError :: Invalid model, missing shape reference: OrderedDict([(u'type', u'structure'), (u'members', OrderedDict([(u'User', OrderedDict([(u'shape', u'Double')])), (u'Nice', OrderedDict([(u'shape', u'Double')])), (u'System', OrderedDict([(u'shape', u'Double')])), (u'Idle', OrderedDict([(u'shape', u'Double')])), (u'IOWait', OrderedDict([(u'shape', u'Double')])), (u'IRQ', OrderedDict([(u'shape', u'Double')])), (u'SoftIRQ', OrderedDict([(u'shape', u'Double')]))]))])\n```\n\nまさかの内部エラー。。。ぐぬぬぬ・・・他の方も同様の事象が発生しているようなのでebの問題なのかもしれません。。\n\nAWS CLIでもできるようなのでそちらでやってみます。\n\n```\n$aws elasticbeanstalk swap-environment-cnames --source-environment-name elastic-beanstalk-green --destination-environment-name elastic-beanstalk-blue\n```\n\nこれで切り替わったはずなので確認します。\n\n```\n$eb status\nEnvironment details for: elastic-beanstalk-green\n  Application name: elastic-beanstalk\n  Region: ap-northeast-1\n  Deployed Version: 2a32\n  Environment ID: e-z5u9efeudu\n  Platform: 64bit Amazon Linux 2015.03 v2.0.1 running PHP 5.6\n  Tier: WebServer-Standard\n  CNAME: elastic-beanstalk-blue.elasticbeanstalk.com\n  Updated: 2015-09-19 08:39:53.378000+00:00\n  Status: Ready\n  Health: Green\n  \n$eb status elastic-beanstalk-blue\nEnvironment details for: elastic-beanstalk-blue\n  Application name: elastic-beanstalk\n  Region: ap-northeast-1\n  Deployed Version: bc92\n  Environment ID: e-87itv3u3d3\n  Platform: 64bit Amazon Linux 2015.03 v2.0.1 running PHP 5.6\n  Tier: WebServer-Standard\n  CNAME: elastic-beanstalk-green-kqzyhtmmze.elasticbeanstalk.com\n  Updated: 2015-09-19 08:39:53.378000+00:00\n  Status: Ready\n  Health: Green\n```\n\nGreen環境とBlue環境のCNAMEが変わっているのが確認できます。\n\nまた、Blue環境（本番）のURL\n\nhttp://elastic-beanstalk-blue.elasticbeanstalk.com/\n\nにアクセスすることで「Hello World!!!!!!」という表示がされます。なお、内部的にRoute53のCNAMEの付け替えとなっているようで、切り替え後すぐに表示が変わらない場合もありますが、少し時間が経てば表示ができるはずです。\n\n最新環境で動作が問題ないよであればBlue環境は破棄し、新規に新環境を作ってテスト、リリース時にCNAME Swapにより切り替えとすれば最初に割り当てたURLでの運用が可能です。(実際はRoute53でドメインを割り当てると思いますが。。）\n\nまた、仮に最新版で動作に不具合がある場合もCNAME Swapを再度行うことで旧環境に戻すことも簡単にでき、安心に運用ができます。\n\n# 掃除\n\n以下で今回作成したそれぞれの環境とアプリケーションを削除します。\n\n```\n$eb terminate elastic-beanstalk-blue\n\n$eb terminate elastic-beanstalk-green\n\n# 上記が消えてからアプリケーションは削除\n$aws elasticbeanstalk delete-application --application-name elastic-beanstalk\n\n```\n\n# 最後に\n\n+ CLIによる操作(ebコマンドとAWS CLI)のみでアプリのデプロイが簡単にできるのは面白い\n+ CNAME Swapで簡単にBlueGreenDeploymentができる\n+ DockerやECSもElasticBeanstalkはサポートしているのでDockerのBlueGreenDeploymentも簡単にできる？\n+ 今ならELBの付け替えができるのでElasticBeanstalkでも簡単にやれる仕組みが欲しい（やろうと思えばできるような気もしますが。。。）\n\n\n","coediting":false,"created_at":"2015-09-20T09:16:15+09:00","id":"af1b71c9e218a973943b","private":false,"tags":[{"name":"AWS","versions":[]},{"name":"ElasticBeanstalk","versions":[]},{"name":"EB","versions":[]}],"title":"ElasticBeanstalkのCNAME Swapを使ってBlueGreenDeploymentをしてみる","updated_at":"2015-09-20T09:16:15+09:00","url":"http://qiita.com/toshihirock/items/af1b71c9e218a973943b","user":{"description":"","facebook_id":"","followees_count":1,"followers_count":11,"github_login_name":"toshihirock","id":"toshihirock","items_count":50,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":20193,"profile_image_url":"https://avatars.githubusercontent.com/u/759026?","twitter_screen_name":"toshihirock","website_url":"http://toshihirock.blogspot.jp/"}},{"rendered_body":"\u003cp\u003e\u003ca href=\"https://www.reddit.com/3lmbi5/\"\u003eSan José State vs Oregon State Live Free\u003c/a\u003e\u003c/p\u003e\n","body":"[San José State vs Oregon State Live Free](https://www.reddit.com/3lmbi5/)\n","coediting":false,"created_at":"2015-09-20T09:06:57+09:00","id":"896549633f3eb59042b3","private":false,"tags":[{"name":"Jose","versions":[]},{"name":"vs","versions":[]},{"name":"State","versions":[]},{"name":"Oregon","versions":[]},{"name":"San","versions":[]}],"title":"San José State vs Oregon State Live Free","updated_at":"2015-09-20T09:06:57+09:00","url":"http://qiita.com/amikala/items/896549633f3eb59042b3","user":{"description":"Canada\" vs \"Ireland Live-Streaming\r\nhttps://www.reddit.com/3ljs1m/\r\n","facebook_id":"","followees_count":0,"followers_count":0,"github_login_name":null,"id":"amikala","items_count":11,"linkedin_id":"","location":"","name":"Canada\" vs \"Ireland Live-Streaming","organization":"","permanent_id":93983,"profile_image_url":"https://secure.gravatar.com/avatar/86b9630e0dbe5d81077683844b6aa305","twitter_screen_name":null,"website_url":"https://www.reddit.com/3ljs1m/"}},{"rendered_body":"\u003cul\u003e\n\u003cli\u003eFreeBSDでsqlite3のgemをインストールするには、以下のようにsqlite3のヘッダファイルの位置などを補ってやる必要が従来からあった。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egem install sqlite3 -- --with-sqlite3-lib\u003cspan class=\"o\"\u003e=\u003c/span\u003e/usr/local/lib --with-sqlite3-include\u003cspan class=\"o\"\u003e=\u003c/span\u003e/usr/local/include\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003eRuby 2.2では、それに加え、以下のようなコンパイルエラーが発生する。これはruby/ruby.hからマクロが削除されているためである。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esqlite3.c:35:20: warning: implicit declaration of function 'RBIGNUM' is invalid in C99 [-Wimplicit-function-declaration]\n  const long len = RBIGNUM_LEN(value);\n                   ^\nsqlite3.c:33:27: note: expanded from macro 'RBIGNUM_LEN'\n#   define RBIGNUM_LEN(x) RBIGNUM(x)-\u0026gt;len\n                          ^\nsqlite3.c:35:20: error: member reference type 'int' is not a pointer\n  const long len = RBIGNUM_LEN(value);\n                   ^~~~~~~~~~~~~~~~~~\nsqlite3.c:33:39: note: expanded from macro 'RBIGNUM_LEN'\n#   define RBIGNUM_LEN(x) RBIGNUM(x)-\u0026gt;len\n                          ~~~~~~~~~~  ^\nsqlite3.c:40:19: error: use of undeclared identifier 'SIZEOF_BDIGITS'\n  if (len \u0026gt; 63 / (SIZEOF_BDIGITS * CHAR_BIT) + 1) return 0;\n                  ^\nsqlite3.c:41:20: error: use of undeclared identifier 'SIZEOF_BDIGITS'\n  if (len == 63 / (SIZEOF_BDIGITS * CHAR_BIT) + 1) {\n                   ^\nsqlite3.c:42:11: error: unknown type name 'BDIGIT'\n    const BDIGIT *digits = RBIGNUM_DIGITS(value);\n          ^\nsqlite3.c:42:28: warning: implicit declaration of function 'RBIGNUM_DIGITS' is invalid in C99 [-Wimplicit-function-declaration]\n    const BDIGIT *digits = RBIGNUM_DIGITS(value);\n                           ^\nsqlite3.c:43:5: error: use of undeclared identifier 'BDIGIT'\n    BDIGIT blast = digits[len-1];\n    ^\nsqlite3.c:44:5: error: use of undeclared identifier 'BDIGIT'\n    BDIGIT bmax = (BDIGIT)1UL \u0026lt;\u0026lt; (63 % (CHAR_BIT * SIZEOF_BDIGITS));\n    ^\nsqlite3.c:45:9: error: use of undeclared identifier 'blast'\n    if (blast \u0026gt; bmax) return 0;\n        ^\nsqlite3.c:45:17: error: use of undeclared identifier 'bmax'; did you mean 'fmax'?\n    if (blast \u0026gt; bmax) return 0;\n                ^~~~\n                fmax\n/usr/include/math.h:313:8: note: 'fmax' declared here\ndouble  fmax(double, double) __pure2;\n        ^\nsqlite3.c:46:9: error: use of undeclared identifier 'blast'\n    if (blast == bmax) {\n        ^\nsqlite3.c:46:18: error: use of undeclared identifier 'bmax'; did you mean 'fmax'?\n    if (blast == bmax) {\n                 ^~~~\n                 fmax\n/usr/include/math.h:313:8: note: 'fmax' declared here\ndouble  fmax(double, double) __pure2;\n        ^\n2 warnings and 10 errors generated.\n*** Error code 1\n\nStop.\nmake: stopped in /usr/home/(snip)/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/sqlite3-1.3.10/ext/sqlite3\n\nmake failed, exit code 1\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e弥縫策として、以下の記述をsqlite3_ruby.hに加えた。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eRBignum\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eRBasic\u003c/span\u003e \u003cspan class=\"n\"\u003ebasic\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003esign\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edigits\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RBIGNUM_SIGN(b) (FIX2LONG(rb_big_cmp((b), INT2FIX(0))) \u0026gt;= 0)\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RBIGNUM_POSITIVE_P(b) (FIX2LONG(rb_big_cmp((b), INT2FIX(0))) \u0026gt;= 0)\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RBIGNUM_NEGATIVE_P(b) (FIX2LONG(rb_big_cmp((b), INT2FIX(0))) \u0026lt; 0)\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RBIGNUM_DIGITS(b)     (RBIGNUM(b)-\u0026gt;digits)\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e#define R_CAST(st)   (struct st*)\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RBASIC(obj)  (R_CAST(RBasic)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define ROBJECT(obj) (R_CAST(RObject)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RBIGNUM(obj) (R_CAST(RBignum)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RCLASS(obj)  (R_CAST(RClass)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RMODULE(obj) RCLASS(obj)\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RSTRING(obj) (R_CAST(RString)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RREGEXP(obj) (R_CAST(RRegexp)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RARRAY(obj)  (R_CAST(RArray)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RDATA(obj)   (R_CAST(RData)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RTYPEDDATA(obj)   (R_CAST(RTypedData)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RSTRUCT(obj) (R_CAST(RStruct)(obj))\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define RFILE(obj)   (R_CAST(RFile)(obj))\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e#ifndef BDIGIT\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e# if SIZEOF_INT*2 \u0026lt;= SIZEOF_LONG_LONG\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT unsigned int\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define SIZEOF_BDIGITS SIZEOF_INT\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT_DBL unsigned LONG_LONG\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT_DBL_SIGNED LONG_LONG\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define PRI_BDIGIT_PREFIX \"\"\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define PRI_BDIGIT_DBL_PREFIX PRI_LL_PREFIX\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e# elif SIZEOF_INT*2 \u0026lt;= SIZEOF_LONG\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT unsigned int\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define SIZEOF_BDIGITS SIZEOF_INT\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT_DBL unsigned long\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT_DBL_SIGNED long\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define PRI_BDIGIT_PREFIX \"\"\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define PRI_BDIGIT_DBL_PREFIX \"l\"\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e# elif SIZEOF_SHORT*2 \u0026lt;= SIZEOF_LONG\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT unsigned short\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define SIZEOF_BDIGITS SIZEOF_SHORT\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT_DBL unsigned long\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT_DBL_SIGNED long\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define PRI_BDIGIT_PREFIX \"h\"\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define PRI_BDIGIT_DBL_PREFIX \"l\"\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e# else\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT unsigned short\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define SIZEOF_BDIGITS (SIZEOF_LONG/2)\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define SIZEOF_ACTUAL_BDIGIT SIZEOF_LONG\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT_DBL unsigned long\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define BDIGIT_DBL_SIGNED long\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define PRI_BDIGIT_PREFIX \"h\"\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#  define PRI_BDIGIT_DBL_PREFIX \"l\"\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e# endif\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#ifndef SIZEOF_ACTUAL_BDIGIT\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e# define SIZEOF_ACTUAL_BDIGIT SIZEOF_BDIGITS\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003eその後、コンパイルが中断して保存されているgemのディレクトリで、\u003ccode\u003eruby setup.rb all -- --with-sqlite3-lib=/usr/local/lib --with-sqlite3-include=/usr/local/include\u003c/code\u003e と実行したところ、適切にインストールされた。\u003c/li\u003e\n\u003cli\u003eこの現象はOS Xでは発生しないので、FreeBSDの環境に問題があるのかもしれない。\u003c/li\u003e\n\u003c/ul\u003e\n","body":"* FreeBSDでsqlite3のgemをインストールするには、以下のようにsqlite3のヘッダファイルの位置などを補ってやる必要が従来からあった。\n\n```bash\ngem install sqlite3 -- --with-sqlite3-lib=/usr/local/lib --with-sqlite3-include=/usr/local/include\n```\n* Ruby 2.2では、それに加え、以下のようなコンパイルエラーが発生する。これはruby/ruby.hからマクロが削除されているためである。\n \n```text\nsqlite3.c:35:20: warning: implicit declaration of function 'RBIGNUM' is invalid in C99 [-Wimplicit-function-declaration]\n  const long len = RBIGNUM_LEN(value);\n                   ^\nsqlite3.c:33:27: note: expanded from macro 'RBIGNUM_LEN'\n#   define RBIGNUM_LEN(x) RBIGNUM(x)-\u003elen\n                          ^\nsqlite3.c:35:20: error: member reference type 'int' is not a pointer\n  const long len = RBIGNUM_LEN(value);\n                   ^~~~~~~~~~~~~~~~~~\nsqlite3.c:33:39: note: expanded from macro 'RBIGNUM_LEN'\n#   define RBIGNUM_LEN(x) RBIGNUM(x)-\u003elen\n                          ~~~~~~~~~~  ^\nsqlite3.c:40:19: error: use of undeclared identifier 'SIZEOF_BDIGITS'\n  if (len \u003e 63 / (SIZEOF_BDIGITS * CHAR_BIT) + 1) return 0;\n                  ^\nsqlite3.c:41:20: error: use of undeclared identifier 'SIZEOF_BDIGITS'\n  if (len == 63 / (SIZEOF_BDIGITS * CHAR_BIT) + 1) {\n                   ^\nsqlite3.c:42:11: error: unknown type name 'BDIGIT'\n    const BDIGIT *digits = RBIGNUM_DIGITS(value);\n          ^\nsqlite3.c:42:28: warning: implicit declaration of function 'RBIGNUM_DIGITS' is invalid in C99 [-Wimplicit-function-declaration]\n    const BDIGIT *digits = RBIGNUM_DIGITS(value);\n                           ^\nsqlite3.c:43:5: error: use of undeclared identifier 'BDIGIT'\n    BDIGIT blast = digits[len-1];\n    ^\nsqlite3.c:44:5: error: use of undeclared identifier 'BDIGIT'\n    BDIGIT bmax = (BDIGIT)1UL \u003c\u003c (63 % (CHAR_BIT * SIZEOF_BDIGITS));\n    ^\nsqlite3.c:45:9: error: use of undeclared identifier 'blast'\n    if (blast \u003e bmax) return 0;\n        ^\nsqlite3.c:45:17: error: use of undeclared identifier 'bmax'; did you mean 'fmax'?\n    if (blast \u003e bmax) return 0;\n                ^~~~\n                fmax\n/usr/include/math.h:313:8: note: 'fmax' declared here\ndouble  fmax(double, double) __pure2;\n        ^\nsqlite3.c:46:9: error: use of undeclared identifier 'blast'\n    if (blast == bmax) {\n        ^\nsqlite3.c:46:18: error: use of undeclared identifier 'bmax'; did you mean 'fmax'?\n    if (blast == bmax) {\n                 ^~~~\n                 fmax\n/usr/include/math.h:313:8: note: 'fmax' declared here\ndouble  fmax(double, double) __pure2;\n        ^\n2 warnings and 10 errors generated.\n*** Error code 1\n\nStop.\nmake: stopped in /usr/home/(snip)/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/sqlite3-1.3.10/ext/sqlite3\n\nmake failed, exit code 1\n```\n\n* 弥縫策として、以下の記述をsqlite3_ruby.hに加えた。\n\n```c\nstruct RBignum {\n    struct RBasic basic;\n    char sign;\n    long len;\n    void *digits;\n};\n#define RBIGNUM_SIGN(b) (FIX2LONG(rb_big_cmp((b), INT2FIX(0))) \u003e= 0)\n#define RBIGNUM_POSITIVE_P(b) (FIX2LONG(rb_big_cmp((b), INT2FIX(0))) \u003e= 0)\n#define RBIGNUM_NEGATIVE_P(b) (FIX2LONG(rb_big_cmp((b), INT2FIX(0))) \u003c 0)\n#define RBIGNUM_DIGITS(b)     (RBIGNUM(b)-\u003edigits)\n\n#define R_CAST(st)   (struct st*)\n#define RBASIC(obj)  (R_CAST(RBasic)(obj))\n#define ROBJECT(obj) (R_CAST(RObject)(obj))\n#define RBIGNUM(obj) (R_CAST(RBignum)(obj))\n#define RCLASS(obj)  (R_CAST(RClass)(obj))\n#define RMODULE(obj) RCLASS(obj)\n#define RSTRING(obj) (R_CAST(RString)(obj))\n#define RREGEXP(obj) (R_CAST(RRegexp)(obj))\n#define RARRAY(obj)  (R_CAST(RArray)(obj))\n#define RDATA(obj)   (R_CAST(RData)(obj))\n#define RTYPEDDATA(obj)   (R_CAST(RTypedData)(obj))\n#define RSTRUCT(obj) (R_CAST(RStruct)(obj))\n#define RFILE(obj)   (R_CAST(RFile)(obj))\n\n#ifndef BDIGIT\n# if SIZEOF_INT*2 \u003c= SIZEOF_LONG_LONG\n#  define BDIGIT unsigned int\n#  define SIZEOF_BDIGITS SIZEOF_INT\n#  define BDIGIT_DBL unsigned LONG_LONG\n#  define BDIGIT_DBL_SIGNED LONG_LONG\n#  define PRI_BDIGIT_PREFIX \"\"\n#  define PRI_BDIGIT_DBL_PREFIX PRI_LL_PREFIX\n# elif SIZEOF_INT*2 \u003c= SIZEOF_LONG\n#  define BDIGIT unsigned int\n#  define SIZEOF_BDIGITS SIZEOF_INT\n#  define BDIGIT_DBL unsigned long\n#  define BDIGIT_DBL_SIGNED long\n#  define PRI_BDIGIT_PREFIX \"\"\n#  define PRI_BDIGIT_DBL_PREFIX \"l\"\n# elif SIZEOF_SHORT*2 \u003c= SIZEOF_LONG\n#  define BDIGIT unsigned short\n#  define SIZEOF_BDIGITS SIZEOF_SHORT\n#  define BDIGIT_DBL unsigned long\n#  define BDIGIT_DBL_SIGNED long\n#  define PRI_BDIGIT_PREFIX \"h\"\n#  define PRI_BDIGIT_DBL_PREFIX \"l\"\n# else\n#  define BDIGIT unsigned short\n#  define SIZEOF_BDIGITS (SIZEOF_LONG/2)\n#  define SIZEOF_ACTUAL_BDIGIT SIZEOF_LONG\n#  define BDIGIT_DBL unsigned long\n#  define BDIGIT_DBL_SIGNED long\n#  define PRI_BDIGIT_PREFIX \"h\"\n#  define PRI_BDIGIT_DBL_PREFIX \"l\"\n# endif\n#endif\n#ifndef SIZEOF_ACTUAL_BDIGIT\n# define SIZEOF_ACTUAL_BDIGIT SIZEOF_BDIGITS\n#endif\n```\n\n* その後、コンパイルが中断して保存されているgemのディレクトリで、``` ruby setup.rb all -- --with-sqlite3-lib=/usr/local/lib --with-sqlite3-include=/usr/local/include``` と実行したところ、適切にインストールされた。\n* この現象はOS Xでは発生しないので、FreeBSDの環境に問題があるのかもしれない。\n","coediting":false,"created_at":"2015-09-20T08:59:21+09:00","id":"66e8931c4cfd55bfe8bf","private":false,"tags":[{"name":"Ruby","versions":[]}],"title":"FreeBSD上のruby 2.2.xでgem sqlite3がインストールできなかった","updated_at":"2015-09-20T09:00:22+09:00","url":"http://qiita.com/aprikip@github/items/66e8931c4cfd55bfe8bf","user":{"description":null,"facebook_id":null,"followees_count":0,"followers_count":1,"github_login_name":"aprikip","id":"aprikip@github","items_count":10,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":17574,"profile_image_url":"https://secure.gravatar.com/avatar/6e5c28118259bc9ec31597a64d785a7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","twitter_screen_name":null,"website_url":null}},{"rendered_body":"\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.xml\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estyle\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"AppTheme\"\u003c/span\u003e \u003cspan class=\"n\"\u003eparent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Theme.AppCompat.Light.DarkActionBar\"\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"colorPrimary\"\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eここに色を指定する\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003estyle\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/18705/aed1ae17-2772-ef0e-0ce0-7f7ecca373b9.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/18705/aed1ae17-2772-ef0e-0ce0-7f7ecca373b9.png\" alt=\"Screen Shot 2015-09-20 at 08.44.24.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"```java:style.xml\n\u003cstyle name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\"\u003e\n        \u003citem name=\"colorPrimary\"\u003eここに色を指定する\u003c/item\u003e\n\u003c/style\u003e\n```\n\n![Screen Shot 2015-09-20 at 08.44.24.png](https://qiita-image-store.s3.amazonaws.com/0/18705/aed1ae17-2772-ef0e-0ce0-7f7ecca373b9.png)\n","coediting":false,"created_at":"2015-09-20T08:46:41+09:00","id":"d3e8e99781bad360545c","private":false,"tags":[{"name":"Android","versions":[]},{"name":"toolbar","versions":[]}],"title":"[Android] Toolbarの色を変える","updated_at":"2015-09-20T08:46:41+09:00","url":"http://qiita.com/tsumekoara/items/d3e8e99781bad360545c","user":{"description":"Japanese web creator.","facebook_id":"","followees_count":13,"followers_count":63,"github_login_name":"tsumekoara","id":"tsumekoara","items_count":220,"linkedin_id":"satomisuyama","location":"","name":"","organization":"","permanent_id":18705,"profile_image_url":"https://pbs.twimg.com/profile_images/378800000052708697/87e0545a700baf5a62a1bd39f5d0ba79_normal.jpeg","twitter_screen_name":"tsumekoara","website_url":""}},{"rendered_body":"\u003cp\u003egeneric-service で定義されている\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003enormal_check_interval\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eが5分だった。\u003c/p\u003e\n\n\u003cp\u003eこれだと検知が遅れるので1分にすること。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e/etc/nagios/objects/templates.cfg\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eなお、 interval_length(初期値60秒) を変更することで秒単位の監視も可能\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.plathome.co.jp/support/labo/oms400/nagios_setup.html\"\u003eぷらっとホーム - サポート - 技術情報 - OpenMicroServer(TM) Nagios の設定\u003c/a\u003e\u003c/p\u003e\n","body":"generic-service で定義されている\n\n* normal_check_interval\n\nが5分だった。\n\nこれだと検知が遅れるので1分にすること。\n\n* /etc/nagios/objects/templates.cfg\n\nなお、 interval_length(初期値60秒) を変更することで秒単位の監視も可能\n\n\n[ぷらっとホーム - サポート - 技術情報 - OpenMicroServer(TM) Nagios の設定](http://www.plathome.co.jp/support/labo/oms400/nagios_setup.html)\n","coediting":false,"created_at":"2015-09-20T08:43:40+09:00","id":"c83d021b695b34b75a18","private":false,"tags":[{"name":"Nagios","versions":[]}],"title":"nagiosの監視間隔は(初期値)5分なので1分に修正すること","updated_at":"2015-09-20T08:57:15+09:00","url":"http://qiita.com/tukiyo3/items/c83d021b695b34b75a18","user":{"description":"■経歴：データセンタ部隊(数千台) \u003e フィールド部隊（全国千のクライアントにPC・ネットワーク設置・保守） \u003e LAMP開発 \u003e 社内インフラ \u003e オンプレ保守・運用","facebook_id":"","followees_count":85,"followers_count":136,"github_login_name":"tukiyo","id":"tukiyo3","items_count":1057,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":25728,"profile_image_url":"https://secure.gravatar.com/avatar/37da30daebe880b286e213812676d28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","twitter_screen_name":"tukiyo3","website_url":"http://tukiyo.github.io/"}},{"rendered_body":"\u003cp\u003e(この記事は大分で開催中の高校生ハッカソン・アイデアソン向けの内容です)\u003c/p\u003e\n\n\u003cp\u003eUIプロトタイピングツールの一種。画像自体は、別アプリケーションで作成してアップロードする形態なので、ペーパープロトタイピングから本格的なものまで、幅広く使えます。アニメーションに関しては、単純な遷移に限られるものの、使い方は簡単。次の3点で構成されています。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWeb版 \u003ca href=\"https://marvelapp.com/\"\u003ehttps://marvelapp.com/\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eiOS / Android 版 (高校生各自がインストール)\u003c/li\u003e\n\u003cli\u003eSketch / Photoshop プラグイン (Sketchとプラグインは、会場のMacにインストール済み)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/1858/824aefe6-d06a-49e5-770e-44a2e2706efe.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/1858/824aefe6-d06a-49e5-770e-44a2e2706efe.png\" alt=\"Artboard 1.png\" title=\"Artboard 1.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"準備\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%BA%96%E5%82%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e準備\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003e高校生はiPhone/AndroidにMarvelをインストール。アプリケーションはApp Store / Play Storeで探しましょう。\u003c/li\u003e\n\u003cli\u003eMarvelのユーザ登録はすでに済ませてあります。MacBookの電源アダプタに書かれているメールアドレスとパスワードを使って、アプリケーションからSign Inしておきましょう。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"使い方---手書き編\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%BF%E3%81%84%E6%96%B9---%E6%89%8B%E6%9B%B8%E3%81%8D%E7%B7%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e使い方 - 手書き編\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eiPhone / Android版のMarvelで、「+」ボタンを押してプロジェクトを追加\n\n\u003cul\u003e\n\u003cli\u003eプロジェクト名は日本語でもOK\u003c/li\u003e\n\u003cli\u003e画面サイズも選びます (iPhone6にしておくのがひとまずは良いと思います)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデザインスプリントで選ばれた画面スケッチを、Marvelで撮影\u003c/li\u003e\n\u003cli\u003e他の画面に遷移させたい場所にリンクをつける\n\n\u003cul\u003e\n\u003cli\u003e「ADD」ボタンをクリックして、写真の中にリンクを作成\u003c/li\u003e\n\u003cli\u003e遷移先の画面スケッチを選択\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePlayボタンを押して、試してみましょう!\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"使い方---sketch編\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%BF%E3%81%84%E6%96%B9---sketch%E7%B7%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e使い方 - Sketch編\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"macのsketchで画面をデザイン\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#mac%E3%81%AEsketch%E3%81%A7%E7%94%BB%E9%9D%A2%E3%82%92%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMacのSketchで画面をデザイン\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eSketchを起動して、\u003ccode\u003eFile \u0026gt; New From Template \u0026gt; iOS UI Design\u003c/code\u003e を選択\u003c/li\u003e\n\u003cli\u003eInsertボタン(「+」アイコン)から、\u003ccode\u003eArtboard\u003c/code\u003eを選択\u003c/li\u003e\n\u003cli\u003e右側の一覧から\u003ccode\u003eiPhone 6\u003c/code\u003eをクリック\u003c/li\u003e\n\u003cli\u003eInsertボタンから、\u003ccode\u003eSymbol\u003c/code\u003eの中の好きな要素を選択\u003c/li\u003e\n\u003cli\u003e配置された要素の位置を調整\u003c/li\u003e\n\u003cli\u003eくりかえし\u003c/li\u003e\n\u003cli\u003eSymbolにないものは、図形ツールで自分で描くか、\u003ca href=\"http://www.sketchappsources.com/\"\u003eSketch App Sources\u003c/a\u003eなどのサイトで探す\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.sketchappsources.com/\"\u003ehttp://www.sketchappsources.com/\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"marvelにアップロード\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#marvel%E3%81%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarvelにアップロード\u003c/h3\u003e\n\n\u003cp\u003eMarvelプラグインは、Sketchにインストール済みです。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSketchで\u003ccode\u003ePlugins \u0026gt; Send or Update All Artboard to Project...\u003c/code\u003eを選択\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://marvelapp.com/\"\u003eMarvelのWebサイト\u003c/a\u003eで確認\u003c/li\u003e\n\u003cli\u003eiPhone / Android版と同様のリンクをつけられる他、アニメーションの設定もできます\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"https://marvelapp.com/\"\u003ehttps://marvelapp.com/\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"端末でチェック\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%AB%AF%E6%9C%AB%E3%81%A7%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e端末でチェック\u003c/h3\u003e\n\n\u003cp\u003eiPhone / Android版のMarvelを開くと、Sketchからアップロードしたプロジェクトが登録されているはずです。Playボタンを使って、使い勝手/手触りを試してみましょう。\u003c/p\u003e\n","body":"\n(この記事は大分で開催中の高校生ハッカソン・アイデアソン向けの内容です)\n\nUIプロトタイピングツールの一種。画像自体は、別アプリケーションで作成してアップロードする形態なので、ペーパープロトタイピングから本格的なものまで、幅広く使えます。アニメーションに関しては、単純な遷移に限られるものの、使い方は簡単。次の3点で構成されています。\n\n- Web版 https://marvelapp.com/\n- iOS / Android 版 (高校生各自がインストール)\n- Sketch / Photoshop プラグイン (Sketchとプラグインは、会場のMacにインストール済み)\n\n![Artboard 1.png](https://qiita-image-store.s3.amazonaws.com/0/1858/824aefe6-d06a-49e5-770e-44a2e2706efe.png \"Artboard 1.png\")\n\n## 準備\n1. 高校生はiPhone/AndroidにMarvelをインストール。アプリケーションはApp Store / Play Storeで探しましょう。\n2. Marvelのユーザ登録はすでに済ませてあります。MacBookの電源アダプタに書かれているメールアドレスとパスワードを使って、アプリケーションからSign Inしておきましょう。\n\n## 使い方 - 手書き編\n\n1. iPhone / Android版のMarvelで、「+」ボタンを押してプロジェクトを追加\n\t- プロジェクト名は日本語でもOK\n\t- 画面サイズも選びます (iPhone6にしておくのがひとまずは良いと思います)\n2. デザインスプリントで選ばれた画面スケッチを、Marvelで撮影\n3. 他の画面に遷移させたい場所にリンクをつける\n\t- 「ADD」ボタンをクリックして、写真の中にリンクを作成\n\t- 遷移先の画面スケッチを選択\n4. Playボタンを押して、試してみましょう!\n\n## 使い方 - Sketch編\n\n### MacのSketchで画面をデザイン\n\n1. Sketchを起動して、`File \u003e New From Template \u003e iOS UI Design` を選択\n2. Insertボタン(「+」アイコン)から、`Artboard`を選択\n3. 右側の一覧から`iPhone 6`をクリック\n4. Insertボタンから、`Symbol`の中の好きな要素を選択\n5. 配置された要素の位置を調整\n6. くりかえし\n7. Symbolにないものは、図形ツールで自分で描くか、[Sketch App Sources](http://www.sketchappsources.com/)などのサイトで探す\n\nhttp://www.sketchappsources.com/\n\n### Marvelにアップロード\n\nMarvelプラグインは、Sketchにインストール済みです。\n\n1. Sketchで`Plugins \u003e Send or Update All Artboard to Project...`を選択\n2. [MarvelのWebサイト](https://marvelapp.com/)で確認\n3. iPhone / Android版と同様のリンクをつけられる他、アニメーションの設定もできます\n\nhttps://marvelapp.com/\n\n### 端末でチェック\n\niPhone / Android版のMarvelを開くと、Sketchからアップロードしたプロジェクトが登録されているはずです。Playボタンを使って、使い勝手/手触りを試してみましょう。\n","coediting":false,"created_at":"2015-09-20T08:34:35+09:00","id":"3bdd465fc07cf9a27114","private":false,"tags":[{"name":"UI","versions":[]},{"name":"sketch","versions":[]},{"name":"marvel","versions":[]},{"name":"prototyping","versions":[]}],"title":"MarvelでUIプロトタイピング","updated_at":"2015-09-20T08:34:35+09:00","url":"http://qiita.com/cognitom/items/3bdd465fc07cf9a27114","user":{"description":"下北沢オープンソースCafeのマスターで、図書館サービス「リブライズ」のデザイン担当。CoffeeScript好き。","facebook_id":"cognitom","followees_count":58,"followers_count":269,"github_login_name":"cognitom","id":"cognitom","items_count":69,"linkedin_id":"cognitom","location":"Tokyo, Japan","name":"Tsutomu Kawamura","organization":"リブライズ合同会社","permanent_id":1858,"profile_image_url":"https://secure.gravatar.com/avatar/2be94635664f02d169e343e4024f0ad5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","twitter_screen_name":"cognitom","website_url":"http://www.osscafe.net/ja/"}},{"rendered_body":"\u003cp\u003e\u003ca href=\"https://www.reddit.com/3lm75v/\"\u003eCalifornia vs Texas Live Online\u003c/a\u003e\u003c/p\u003e\n","body":"[California vs Texas Live Online](https://www.reddit.com/3lm75v/)\n","coediting":false,"created_at":"2015-09-20T08:28:14+09:00","id":"6a205b7c676837fab40b","private":false,"tags":[{"name":"vs","versions":[]},{"name":"California","versions":[]},{"name":"Texas","versions":[]}],"title":"California vs Texas Live Online","updated_at":"2015-09-20T08:28:14+09:00","url":"http://qiita.com/amikala/items/6a205b7c676837fab40b","user":{"description":"Canada\" vs \"Ireland Live-Streaming\r\nhttps://www.reddit.com/3ljs1m/\r\n","facebook_id":"","followees_count":0,"followers_count":0,"github_login_name":null,"id":"amikala","items_count":11,"linkedin_id":"","location":"","name":"Canada\" vs \"Ireland Live-Streaming","organization":"","permanent_id":93983,"profile_image_url":"https://secure.gravatar.com/avatar/86b9630e0dbe5d81077683844b6aa305","twitter_screen_name":null,"website_url":"https://www.reddit.com/3ljs1m/"}},{"rendered_body":"\u003cp\u003e\u003ca href=\"https://www.reddit.com/3lm2z3/\"\u003eNC State vs Old Dominion Live\u003c/a\u003e\u003c/p\u003e\n","body":"[NC State vs Old Dominion Live](https://www.reddit.com/3lm2z3/)\n","coediting":false,"created_at":"2015-09-20T07:55:01+09:00","id":"faf877f7ee009e7f1793","private":false,"tags":[{"name":"nc","versions":[]},{"name":"vs","versions":[]},{"name":"State","versions":[]},{"name":"Old","versions":[]},{"name":"Dominion","versions":[]}],"title":"NC State vs Old Dominion Live","updated_at":"2015-09-20T07:55:01+09:00","url":"http://qiita.com/amikala/items/faf877f7ee009e7f1793","user":{"description":"Canada\" vs \"Ireland Live-Streaming\r\nhttps://www.reddit.com/3ljs1m/\r\n","facebook_id":"","followees_count":0,"followers_count":0,"github_login_name":null,"id":"amikala","items_count":11,"linkedin_id":"","location":"","name":"Canada\" vs \"Ireland Live-Streaming","organization":"","permanent_id":93983,"profile_image_url":"https://secure.gravatar.com/avatar/86b9630e0dbe5d81077683844b6aa305","twitter_screen_name":null,"website_url":"https://www.reddit.com/3ljs1m/"}},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"まえがき\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%88%E3%81%8C%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまえがき\u003c/h1\u003e\n\n\u003cp\u003e落とし穴というか、Google検索で古いほうが上に出てくるというだけなんですが。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"本題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%AC%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e本題\u003c/h1\u003e\n\n\u003cp\u003eUbuntu 12.04では、Upstartを使っていたので、\u003ccode\u003e/etc/default/docker\u003c/code\u003eに環境変数\u003ccode\u003ehttp_proxy\u003c/code\u003e, \u003ccode\u003ehttps_proxy\u003c/code\u003eを書くだけでよかったんですが、\u003cbr\u003e\nUbuntu 15.04では、systemdになっているため上記の方法では対応できません。\u003c/p\u003e\n\n\u003cp\u003eではどうすればよいかというと、公式にドキュメントがありました。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://docs.master.dockerproject.org/articles/systemd/\"\u003ehttp://docs.master.dockerproject.org/articles/systemd/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e少し手順が複雑なので、ポインタを貼っておくにとどめておきます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考\u003c/h1\u003e\n\n\u003cp\u003eちょい古めの記事。Ubuntu 15.04使うときに参照してしまうとハマります。\u003cbr\u003e\n\u003ca href=\"http://deeeet.com/writing/2014/07/01/docker-behind-proxy/\"\u003ehttp://deeeet.com/writing/2014/07/01/docker-behind-proxy/\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://tkak.hatenablog.com/entry/2014/02/23/110907\"\u003ehttp://tkak.hatenablog.com/entry/2014/02/23/110907\u003c/a\u003e\u003c/p\u003e\n","body":"# まえがき\n\n落とし穴というか、Google検索で古いほうが上に出てくるというだけなんですが。\n\n# 本題\n\nUbuntu 12.04では、Upstartを使っていたので、`/etc/default/docker`に環境変数`http_proxy`, `https_proxy`を書くだけでよかったんですが、\nUbuntu 15.04では、systemdになっているため上記の方法では対応できません。\n\nではどうすればよいかというと、公式にドキュメントがありました。\n\nhttp://docs.master.dockerproject.org/articles/systemd/\n\n少し手順が複雑なので、ポインタを貼っておくにとどめておきます。\n\n# 参考\nちょい古めの記事。Ubuntu 15.04使うときに参照してしまうとハマります。\nhttp://deeeet.com/writing/2014/07/01/docker-behind-proxy/\nhttp://tkak.hatenablog.com/entry/2014/02/23/110907\n","coediting":false,"created_at":"2015-09-20T07:44:59+09:00","id":"e96c4f89e5a4c0a5e368","private":false,"tags":[{"name":"docker","versions":[]},{"name":"systemd","versions":[]},{"name":"Ubuntu15.04","versions":[]}],"title":"Ubuntu 15.04 でかつProxy環境で、Dockerを使う場合の落とし穴","updated_at":"2015-09-20T07:44:59+09:00","url":"http://qiita.com/aKenjiKato/items/e96c4f89e5a4c0a5e368","user":{"description":"","facebook_id":"","followees_count":46,"followers_count":41,"github_login_name":"aKenjiKato","id":"aKenjiKato","items_count":43,"linkedin_id":"","location":"Makuhari, Chiba","name":"Kenji KATO","organization":"ACCESS CO., LTD","permanent_id":37442,"profile_image_url":"https://secure.gravatar.com/avatar/d063231285a6fb1f7996fdbbd66a57a8","twitter_screen_name":null,"website_url":""}},{"rendered_body":"\n\u003ch2\u003e\n\u003cspan id=\"方針\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%96%B9%E9%87%9D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e方針\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eあるモデルに OneToOneでプライバシー制御を設定するモデルを定義する\u003c/li\u003e\n\u003cli\u003eプライバシー制御モデルは元のモデルと同じフィールド名とする\u003c/li\u003e\n\u003cli\u003eプライバシー制御モデルは動的に定義する\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"元モデル個人属性profile\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%83%E3%83%A2%E3%83%87%E3%83%AB%E5%80%8B%E4%BA%BA%E5%B1%9E%E6%80%A7profile\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e元モデル:個人属性(Profile)\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e抽象モデル\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"py\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAbstractProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eOneToOneField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIntegerField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"n\"\u003egender\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIntegerField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echoices\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'Femail'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e'Male'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eabstract\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e具体モデル\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"py\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAbstractProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e                                                     \n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e   \n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"モデルに対してプライバシー制御モデルのフィールドを生成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6%E3%83%97%E3%83%A9%E3%82%A4%E3%83%90%E3%82%B7%E3%83%BC%E5%88%B6%E5%BE%A1%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AE%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%82%92%E7%94%9F%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eモデルに対してプライバシー制御モデルのフィールドを生成\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e抽象モデルのフィールドを返す\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"py\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_privacy_fields\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efield_class\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e    \n    \u003cspan class=\"c\"\u003e# メタクラスを abstract = Trueで作る                                               \u003c/span\u003e\n    \u003cspan class=\"n\"\u003efields\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"s\"\u003e'__module__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e__module__\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"s\"\u003e'Meta'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'Meta'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e'abstract'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_meta\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eisinstance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAutoField\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efields\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efield_class\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003everbose_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efields\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"プライバシ制御モデルprofileprivacy\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%A9%E3%82%A4%E3%83%90%E3%82%B7%E5%88%B6%E5%BE%A1%E3%83%A2%E3%83%87%E3%83%ABprofileprivacy\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプライバシ制御モデル(ProfilePrivacy)\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e抽象モデルをAbstractProfileを元に動的に生成\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"py\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eAbstractProfilePrivacy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"s\"\u003e'AbstractProfilePrivacy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e,),\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecreate_privacy_fields\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eAbstractProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBooleanField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e具体モデル: \u003ccode\u003eProfile \u0026lt;-(OneToOne)- ProfilePrivacy\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"py\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProfilePrivacy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAbstractProfilePrivacy\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprofile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eOneToOneField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"マイグレーション\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%9E%E3%82%A4%E3%82%B0%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eマイグレーション\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003epython manage.py makemigrations accounts\n\nMigrations \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"s1\"\u003e'accounts'\u003c/span\u003e:\n  0001_initial.py:\n    - Create model Profile\n    - Create model ProfilePrivacy\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003epython manage.py migrate\n\nOperations to perform:\n  Apply all migrations: accounts\nRunning migrations:\n  Rendering model states... DONE\n  Applying accounts.0001_initial... OK\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003epython manage.py shell\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"py\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib.auth.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eaccounts.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e'admin'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProfile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e33\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003egender\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"n\"\u003epr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProfilePrivacy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprofileprivacy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egender\u003c/span\u003e\n\u003cspan class=\"n\"\u003eOut\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"n\"\u003epr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egender\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"n\"\u003epr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprofileprivacy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egender\u003c/span\u003e\n\u003cspan class=\"n\"\u003eOut\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"テンプレート\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eテンプレート\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;td\u0026gt;\u003c/span\u003e{% if request.user == profile.user or profile.profileprivacy.age %}\n    {{ profile.age }} {% else %} 公開されていません {% endif %}\u003cspan class=\"nt\"\u003e\u0026lt;/td\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n","body":"\n## 方針\n\n- あるモデルに OneToOneでプライバシー制御を設定するモデルを定義する\n- プライバシー制御モデルは元のモデルと同じフィールド名とする\n- プライバシー制御モデルは動的に定義する\n\n## 元モデル:個人属性(Profile)\n\n- 抽象モデル\n\n~~~py\n\nclass AbstractProfile(models.Model):\n    user = models.OneToOneField(User)\n    age = models.IntegerField()\n    gender = models.IntegerField(choices=((0, 'Femail', ), (1, 'Male', ), ))\n\n    class Meta:\n        abstract = True\n~~~\n\n- 具体モデル\n\n~~~py\nclass Profile(AbstractProfile):                                                     \n    pass   \n~~~\n\n\n## モデルに対してプライバシー制御モデルのフィールドを生成\n\n- 抽象モデルのフィールドを返す\n\n~~~py\ndef create_privacy_fields(model_class, field_class, **kwargs):    \n\t# メタクラスを abstract = Trueで作る                                               \n    fields = {\n        '__module__': model_class.__module__,\n        'Meta': type('Meta', (object, ), {'abstract': True, }),\n    }\n\n    for i in model_class._meta.fields:\n        if isinstance(i, models.AutoField):\n            continue\n        fields[i.name] = field_class(i.verbose_name, **kwargs)\n\n    return fields\n~~~    \n\n## プライバシ制御モデル(ProfilePrivacy)\n\n- 抽象モデルをAbstractProfileを元に動的に生成\n\n~~~py\nAbstractProfilePrivacy = type(\n    'AbstractProfilePrivacy',\n    (models.Model,),\n    create_privacy_fields(\n        AbstractProfile, models.BooleanField, default=False),\n)   \n~~~\n\n- 具体モデル: `Profile \u003c-(OneToOne)- ProfilePrivacy`\n\n~~~py\nclass ProfilePrivacy(AbstractProfilePrivacy):\n    profile = models.OneToOneField(Profile)\n~~~\n\n## マイグレーション\n\n\n~~~bash\n$ python manage.py makemigrations accounts\n\nMigrations for 'accounts':\n  0001_initial.py:\n    - Create model Profile\n    - Create model ProfilePrivacy\n~~~\n\n~~~bash\n$ python manage.py migrate\n\nOperations to perform:\n  Apply all migrations: accounts\nRunning migrations:\n  Rendering model states... DONE\n  Applying accounts.0001_initial... OK\n~~~\n\n~~~bash\n$ python manage.py shell\n~~~\n~~~py\nIn [1]: from django.contrib.auth.models import *\nIn [2]: from accounts.models import *\nIn [3]: u = User.objects.get(username='admin')\nIn [4]: p = Profile.objects.create(user=u, age=33, gender=0)\nIn [5]: pr = ProfilePrivacy.objects.create(profile=p)\nIn [6]: u.profile.profileprivacy.gender\nOut[6]: False\nIn [7]: pr.gender = True\nIn [8]: pr.save()\nIn [9]: u.profile.profileprivacy.gender\nOut[9]: True\n~~~\n\n## テンプレート\n\n~~~html\n\n\u003ctd\u003e{% if request.user == profile.user or profile.profileprivacy.age %}\n    {{ profile.age }} {% else %} 公開されていません {% endif %}\u003c/td\u003e\n\n~~~\n","coediting":false,"created_at":"2015-09-20T07:35:24+09:00","id":"ef7f0df3d98d5f813906","private":false,"tags":[{"name":"Django","versions":[]}],"title":"Django: モデルフィールドのプライバシー制御を設定する","updated_at":"2015-09-20T07:35:24+09:00","url":"http://qiita.com/hidelafoglia/items/ef7f0df3d98d5f813906","user":{"description":"コンピュータプログラミング勉強中です。","facebook_id":"","followees_count":6,"followers_count":23,"github_login_name":"hdknr","id":"hidelafoglia","items_count":127,"linkedin_id":"","location":"渋谷区","name":"lafoglia hide","organization":"","permanent_id":10503,"profile_image_url":"https://secure.gravatar.com/avatar/ae54d83e88f763d7654431c045b64401?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","twitter_screen_name":"hdknr","website_url":"https://github.com/hdknr/scriptogr.am/tree/master/qiita"}},{"rendered_body":"\u003cp\u003e\u003ca href=\"https://www.reddit.com/3llzuj/\"\u003eColorado vs Colorado State\u003c/a\u003e\u003c/p\u003e\n","body":"[Colorado vs Colorado State](https://www.reddit.com/3llzuj/)\n","coediting":false,"created_at":"2015-09-20T07:29:51+09:00","id":"64bea51d493d31da6d8f","private":false,"tags":[{"name":"vs","versions":[]},{"name":"State","versions":[]},{"name":"Colorado","versions":[]}],"title":"Colorado vs Colorado State Live Online","updated_at":"2015-09-20T07:29:51+09:00","url":"http://qiita.com/amikala/items/64bea51d493d31da6d8f","user":{"description":"Canada\" vs \"Ireland Live-Streaming\r\nhttps://www.reddit.com/3ljs1m/\r\n","facebook_id":"","followees_count":0,"followers_count":0,"github_login_name":null,"id":"amikala","items_count":11,"linkedin_id":"","location":"","name":"Canada\" vs \"Ireland Live-Streaming","organization":"","permanent_id":93983,"profile_image_url":"https://secure.gravatar.com/avatar/86b9630e0dbe5d81077683844b6aa305","twitter_screen_name":null,"website_url":"https://www.reddit.com/3ljs1m/"}},{"rendered_body":"\u003cp\u003e最近、Swift 2で提唱されているProtocol Oriented Programmingの理解がちょっと自信なくて、色々記事見つつも今いち掴めた気がしなかったので、原典であろうWWDCでそれを提唱していたセッションを見たところ、かなりすっきりした気がします。\u003cbr\u003e\nセッション: \u003ca href=\"https://developer.apple.com/videos/wwdc/2015/?id=408\"\u003eProtocol-Oriented Programming in Swift - WWDC 2015 - Videos - Apple Developer\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eセッション冒頭は、クラス vs Protocolの話で知りたいこととちょっとズレていたのでそれはスキップしてます。\u003cbr\u003e\nそのあたりは、\u003ca href=\"https://developer.apple.com/videos/wwdc/2015/?id=414\"\u003eBuilding Better Apps with Value Types in Swift - WWDC 2015 - Videos - Apple Developer\u003c/a\u003e の方が手厚そうなので、近々同じような感じで理解深めておきたいと思っています。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まずはイケてないコード\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A%E3%81%AF%E3%82%A4%E3%82%B1%E3%81%A6%E3%81%AA%E3%81%84%E3%82%B3%E3%83%BC%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまずはイケてないコード\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003efatalError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"implement me!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 1\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nl\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nl\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDouble\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"kr\"\u003eoverride\u003c/span\u003e \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eother\u003c/span\u003e \u003cspan class=\"kt\"\u003eas\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e \u003cspan class=\"n\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 2\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"1-fatalerrorimplement-meがイケてない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#1-fatalerrorimplement-me%E3%81%8C%E3%82%A4%E3%82%B1%E3%81%A6%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1. \u003ccode\u003efatalError(\"implement me!\")\u003c/code\u003eがイケてない\u003c/h2\u003e\n\n\u003cp\u003e特にSwiftは抽象クラスが無いので、こういう基底クラス的なものを作ると、イケてなさが目立ちますね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"2-other-as-numberでダウンキャストしている\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#2-other-as-number%E3%81%A7%E3%83%80%E3%82%A6%E3%83%B3%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e2. \u003ccode\u003eother as! Number\u003c/code\u003eでダウンキャストしている。\u003c/h2\u003e\n\n\u003cp\u003e型の恩恵を殺しています(´・︵・｀)\u003c/p\u003e\n\n\u003cp\u003eセッションでは、\"code smell\"という表現で、このコードのイケてなさが表現されています。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"改善後\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%94%B9%E5%96%84%E5%BE%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e改善後\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 1\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kt\"\u003eSelf\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 2\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nl\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 3\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nl\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDouble\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 1\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 2\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"1-classからprotocolに変更\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#1-class%E3%81%8B%E3%82%89protocol%E3%81%AB%E5%A4%89%E6%9B%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1. classからprotocolに変更\u003c/h2\u003e\n\n\u003cp\u003e実装を抜くことが可能になります。\u003cbr\u003e\nさらにNumberでのメソッド定義も、overrideは不要となります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"2-受け取る型をselfに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#2-%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B%E5%9E%8B%E3%82%92self%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e2. 受け取る型を\u003ccode\u003eSelf\u003c/code\u003eに\u003c/h2\u003e\n\n\u003cp\u003eNumberの実装で、Number型で受けられるようになり、ダウンキャストが無くなりました。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"3-structに変更\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#3-struct%E3%81%AB%E5%A4%89%E6%9B%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e3. structに変更\u003c/h2\u003e\n\n\u003cp\u003eこれは明確な理由が述べられて無さそうに聞こえました。\u003cbr\u003e\n冒頭で、参照型だとバグが生まれやすいなどの理由で、値型を推していたのでその一貫な気がします。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"バイナリサーチ関数に使う例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%90%E3%82%A4%E3%83%8A%E3%83%AA%E3%82%B5%E3%83%BC%E3%83%81%E9%96%A2%E6%95%B0%E3%81%AB%E4%BD%BF%E3%81%86%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eバイナリサーチ関数に使う例\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003esortedKeys\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eforKey\u003c/span\u003e \u003cspan class=\"nl\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 1\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ehi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esortedKeys\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ehi\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehi\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esortedKeys\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003emid\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 2\u003c/span\u003e\n            \u003cspan class=\"n\"\u003elo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ehi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"コンパイルエラー発生\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%82%A8%E3%83%A9%E3%83%BC%E7%99%BA%E7%94%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンパイルエラー発生\u003c/h2\u003e\n\n\u003cp\u003e一見良い例に見えますが、まだこのままではコンパイルエラーが発生します。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e1: error: protocol 'Ordered' can only be used as a generic constraint because it has Self or associated type requirements\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e2: error: member 'precedes' cannot be used on value of protocol type 'Ordered'; use a generic constraint instead\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e見ての通り、OrderedプロトコルのprecedesメソッドがSelfを受けることが原因とのことです。\u003cbr\u003e\nなぜ、これがダメなのかというと、Orderedは、Number以外もあり得るからです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nl\"\u003eLabel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eLabel\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこういった、Labelというstructがあった時、それがsortedKeysに渡されると、LabelとNumberを比較することになってしまいます。\u003cbr\u003e\nこれは解決不能です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ジェネリクスで解決\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%82%AF%E3%82%B9%E3%81%A7%E8%A7%A3%E6%B1%BA\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eジェネリクスで解決\u003c/h2\u003e\n\n\u003cp\u003eつまり、Orderedプロトコルを実装しているものであれば、何でも良いが、ただしそれは全て同じ型(セッションではhomogeniousと表現されている)である必要があります。\u003c/p\u003e\n\n\u003cp\u003eこれは、このようにジェネリクスで表現出来ます。無事コンパイルエラーが解決しました(　´･‿･｀)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nl\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003esortedKeys\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eforKey\u003c/span\u003e \u003cspan class=\"nl\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ehi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esortedKeys\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ehi\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehi\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esortedKeys\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003emid\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003elo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ehi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elo\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"プロトコルで定義したメソッドの引数の型をselfにするかどうかの違い\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB%E3%81%A7%E5%AE%9A%E7%BE%A9%E3%81%97%E3%81%9F%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%AE%E5%BC%95%E6%95%B0%E3%81%AE%E5%9E%8B%E3%82%92self%E3%81%AB%E3%81%99%E3%82%8B%E3%81%8B%E3%81%A9%E3%81%86%E3%81%8B%E3%81%AE%E9%81%95%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプロトコルで定義したメソッドの引数の型をSelfにするかどうかの違い\u003c/h2\u003e\n\n\u003cp\u003e今のコンパイルエラーは、SelfにせずOrderedという具体的な型を指定していたら発生しませんでした。\u003cbr\u003e\nそれが良いことかという言うと逆で、型が入り交じった場合ダウンキャストのところで実行時エラーが発生します。\u003cbr\u003e\n\u003ccode\u003eSelf\u003c/code\u003e指定としたことでそれをコンパイルエラーによって未然に防げるようになったわけです。\u003c/p\u003e\n\n\u003cp\u003eセッションのこの表がとても分かりやすいです。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/19398/a3d11888-21ab-9121-e564-0a641a0c7bf7.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/19398/a3d11888-21ab-9121-e564-0a641a0c7bf7.png\" alt=\"Screen Shot 2015-09-19 at 4.40.49 PM.png\" title=\"Screen Shot 2015-09-19 at 4.40.49 PM.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"図形を描くコードを例にとった説明\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%9B%B3%E5%BD%A2%E3%82%92%E6%8F%8F%E3%81%8F%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E4%BE%8B%E3%81%AB%E3%81%A8%E3%81%A3%E3%81%9F%E8%AA%AC%E6%98%8E\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e図形を描くコードを例にとった説明\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"まず初めのコード\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A%E5%88%9D%E3%82%81%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまず初めのコード\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e// 図形などの定義\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"moveTo(\\(p.x), \\(p.y))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"lineTo(\\(p.x), \\(p.y))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arcAt(\\(center), radius: \\(radius), startAngle: \\(startAngle), endAngle: \\(endAngle))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"n\"\u003eDrawable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003erenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nl\"\u003ePolygon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDrawable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003erenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003erenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecorners\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ecorners\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003erenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nl\"\u003ecorners\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nl\"\u003eCircle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDrawable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003erenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003erenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eM_PI\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nl\"\u003eDiagram\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDrawable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003erenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eelements\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nl\"\u003eelements\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawable\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// テストコード\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ecircle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCircle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e187.5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e333.5\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e93.75\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003etriangle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePolygon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecorners\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e187.5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e427.25\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n    \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e268.69\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e286.625\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n    \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e106.31\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e286.625\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ediagram\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDiagram\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eelements\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecircle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etriangle\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ediagram\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこういうログが吐かれて、円と三角形が描かれているようなことが何となく分かる\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003earcAt((187.5, 333.5), radius: 93.75, startAngle: 0.0, endAngle: 6.28318530717959)\nmoveTo(106.31, 286.625)\nlineTo(187.5, 427.25)\nlineTo(268.69, 286.625)\nlineTo(106.31, 286.625)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"実際の描画が見たいと言われて変更\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AE%E6%8F%8F%E7%94%BB%E3%81%8C%E8%A6%8B%E3%81%9F%E3%81%84%E3%81%A8%E8%A8%80%E3%82%8F%E3%82%8C%E3%81%A6%E5%A4%89%E6%9B%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実際の描画が見たい、と言われて変更\u003c/h2\u003e\n\n\u003cp\u003eというわけで変更してみましょう。\u003cbr\u003e\nまずは、Rendererをprotocolに変えて実装を削って、代わりにTestRendererに移しましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nl\"\u003eTestRenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"moveTo(\\(p.x), \\(p.y))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"lineTo(\\(p.x), \\(p.y))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arcAt(\\(center), radius: \\(radius), startAngle: \\(startAngle), endAngle: \\(endAngle))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eさらに、実行部分はこうすると、とりあえず先ほどの挙動は維持出来ました。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003ediagram\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTestRenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eさらに、実際に描画してみましょう。\u003cbr\u003e\nRendererを実装したCGContextを定義するだけで簡単に出来てしまいます。\u003cbr\u003e\nprotocol orientedの強力さが分かった気がします(　´･‿･｀)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"nl\"\u003eCGContext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCGContextMoveToPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCGContextAddLineToPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003earc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCGPathCreateMutable\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCGPathAddArc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCGContextAddPath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003earc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e実行はこうです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eshowCoreGraphicsDiagram(\"title\", size: CGSizeMake(400, 600)) { diagram.draw($0) }\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ePlaygroundでのCGContext描画のために、 \u003ca href=\"https://developer.apple.com/sample-code/wwdc/2015/downloads/Crustacean.zip\"\u003ehttps://developer.apple.com/sample-code/wwdc/2015/downloads/Crustacean.zip\u003c/a\u003e のヘルパーメソッドも必要です。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"他のの図形を表現可能とするためにrendererを拡張\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%96%E3%81%AE%E3%81%AE%E5%9B%B3%E5%BD%A2%E3%82%92%E8%A1%A8%E7%8F%BE%E5%8F%AF%E8%83%BD%E3%81%A8%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%ABrenderer%E3%82%92%E6%8B%A1%E5%BC%B5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e他のの図形を表現可能とするためにRendererを拡張\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"指定箇所に円を描くcircleatの定義を足します\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8C%87%E5%AE%9A%E7%AE%87%E6%89%80%E3%81%AB%E5%86%86%E3%82%92%E6%8F%8F%E3%81%8Fcircleat%E3%81%AE%E5%AE%9A%E7%BE%A9%E3%82%92%E8%B6%B3%E3%81%97%E3%81%BE%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e指定箇所に円を描く\u003ccode\u003ecircleAt\u003c/code\u003eの定義を足します。\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecircleAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nl\"\u003eTestRenderer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"moveTo(\\(p.x), \\(p.y))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"lineTo(\\(p.x), \\(p.y))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arcAt(\\(center), radius: \\(radius), startAngle: \\(startAngle), endAngle: \\(endAngle))\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecircleAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eM_PI\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"nl\"\u003eCGContext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCGContextMoveToPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCGContextAddLineToPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003earc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCGPathCreateMutable\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCGPathAddArc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCGContextAddPath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003earc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecircleAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eM_PI\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eTestRenderer\u003c/code\u003eと\u003ccode\u003eCGContext\u003c/code\u003eに、\u003ccode\u003ecircleAt\u003c/code\u003eのコピペ実装が発生してしまいました(´・︵・｀)\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ここでswift-2のprotocol-extensions\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%81%93%E3%81%A7swift-2%E3%81%AEprotocol-extensions\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eここでSwift 2の\u003ccode\u003eProtocol Extensions\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eこのようにRenderを拡張して\u003ccode\u003ecircleAt\u003c/code\u003eを実装しましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emoveTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003elineTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecircleAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"n\"\u003eRenderer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecircleAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003earcAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003estartAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eendAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eM_PI\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eTestRenderer\u003c/code\u003eと\u003ccode\u003eCGContext\u003c/code\u003eに、\u003ccode\u003ecircleAt\u003c/code\u003eのコピペ実装は削除しましょうʕ ·ᴥ·ʔ\u003cbr\u003e\nすっきりしました(　´･‿･｀)\u003c/p\u003e\n\n\u003cp\u003eSwiftは抽象クラス無いですが、それを\u003ccode\u003eprotocol\u003c/code\u003eと\u003ccode\u003eprotocol extension\u003c/code\u003eの組み合わせですっきり実現されていると、僕は感じています。\u003cbr\u003e\n抽象クラスがある言語だと、Interface使うか抽象クラス使うべきか迷う、みたいな声を良く聞きますが、Swiftだと\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eProtocolでインターフェースを定義\u003c/li\u003e\n\u003cli\u003e必要ならProtocolを拡張してデフォルト実装を埋め込む\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eという感じですっきり解決出来ます。\u003cbr\u003e\nそこの役割が言語レベルで明確に分けられているのが筋が良いと思います。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"collectiontypeのindexofメソッドを実装する例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#collectiontype%E3%81%AEindexof%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCollectionTypeのindexOfメソッドを実装する例\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"コンパイルエラーになってしまうもの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%86%E3%82%82%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンパイルエラーになってしまうもの\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"n\"\u003eCollectionType\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eindexOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eGenerator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eIndex\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eindices\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eelement\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// エラー\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eerror: binary operator '==' cannot be applied to two 'Self.Generator.Element' operands\u003c/code\u003eというエラーが発生してしまいました(´・︵・｀)\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"解決‿\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B1%BA%E2%80%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解決(　´･‿･｀)\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ewhere Generator.Element: Equatable\u003c/code\u003eの拘束条件を付けることで、\u003ccode\u003eGenerator.Element\u003c/code\u003eが\u003ccode\u003eEquatable\u003c/code\u003e(\u003ccode\u003e==\u003c/code\u003e評価可能なもの)に限定でき、上記のコンパイルエラーが解決します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"n\"\u003eCollectionType\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"n\"\u003eGenerator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nl\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eEquatable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eindexOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eGenerator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eIndex\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eindices\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eelement\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"バイナリサーチの例に戻ってprotocol-extensionsを活用\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%90%E3%82%A4%E3%83%8A%E3%83%AA%E3%82%B5%E3%83%BC%E3%83%81%E3%81%AE%E4%BE%8B%E3%81%AB%E6%88%BB%E3%81%A3%E3%81%A6protocol-extensions%E3%82%92%E6%B4%BB%E7%94%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eバイナリサーチの例に戻ってProtocol Extensionsを活用\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"binarysearchを呼んでみる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#binarysearch%E3%82%92%E5%91%BC%E3%82%93%E3%81%A7%E3%81%BF%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003ebinarySearch\u003c/code\u003eを呼んでみる\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003eposition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"nl\"\u003eforKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eexpected an argument list of type '([T], forKey: T)'\u003c/code\u003eのエラーが出ます。\u003cbr\u003e\nIntはOrderedプロトコルに従ってないので、仕方ないですね(´・︵・｀)\u003c/p\u003e\n\n\u003cp\u003eIntを拡張すれば解決します(　´･‿･｀)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"nl\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eother\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこの勢いで\u003ccode\u003eString\u003c/code\u003eも拡張しちゃいましょう(　´･‿･｀)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"nl\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eother\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003eposition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s\"\u003e\"1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"3\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"nl\"\u003eforKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eなんか、イヤな感じがしてきましたね(´・︵・｀)\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"重複実装を無くしましょう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%87%8D%E8%A4%87%E5%AE%9F%E8%A3%85%E3%82%92%E7%84%A1%E3%81%8F%E3%81%97%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e重複実装を無くしましょう\u003c/h2\u003e\n\n\u003cp\u003eIntやStringはComparableを実装しているので、このように定義すれば、Int・StringはOrderedにさえ従っていれば良いです。\u003cbr\u003e\nかなりマシになりましたね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"n\"\u003eComparable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kt\"\u003eSelf\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eother\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"nl\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"nl\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"orderedに従う必要ないのでは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ordered%E3%81%AB%E5%BE%93%E3%81%86%E5%BF%85%E8%A6%81%E3%81%AA%E3%81%84%E3%81%AE%E3%81%A7%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eOrderedに従う必要ないのでは？\u003c/h3\u003e\n\n\u003cp\u003eそもそも、\u003ccode\u003eComparable\u003c/code\u003eに従っているものが\u003ccode\u003efunc precedes(other: Self) -\u0026gt; Bool\u003c/code\u003eを実装していることが宣言されているならば、\u003ccode\u003eextension Int: Ordered {}\u003c/code\u003eなどの記述は冗長なのでは？とも思ってきます。\u003cbr\u003e\nしかし、\u003ccode\u003eextension Int: Ordered {}\u003c/code\u003eを削るとコンパイルエラーになります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nl\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ecannot\u003c/span\u003e \u003cspan class=\"n\"\u003einvoke\u003c/span\u003e \u003cspan class=\"err\"\u003e'\u003c/span\u003e\u003cspan class=\"n\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"err\"\u003e'\u003c/span\u003e \u003cspan class=\"n\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003ean\u003c/span\u003e \u003cspan class=\"n\"\u003eargument\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"err\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"nl\"\u003eforKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"err\"\u003e'\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSwiftは、構造的部分型(ダックタイピングに近いけどコンパイル時に確定するものみたいな感じ)の発想は取り入れていないということだと思います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ちぐはぐな挙動を改善\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A1%E3%81%90%E3%81%AF%E3%81%90%E3%81%AA%E6%8C%99%E5%8B%95%E3%82%92%E6%94%B9%E5%96%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eちぐはぐな挙動を改善\u003c/h2\u003e\n\n\u003cp\u003e例えば、DoubleもComparableを実装しているので、これはコンパイルが通ります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003etruth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.14\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e98.6\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e一方、こちらは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003eposition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e4.0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"nl\"\u003eforKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eerror: cannot invoke 'binarySearch' with an argument list of type '([Double], forKey: Double)'\u003c/code\u003eというコンパイルエラーになります。\u003c/p\u003e\n\n\u003cp\u003eそもそもDoubleに\u003ccode\u003eprecedes\u003c/code\u003eメソッドを生やす気が無いなら、Comparableの拡張を限定的にしましょう。\u003c/p\u003e\n\n\u003cp\u003eこのように定義すれば、\u003ccode\u003elet truth = 3.14.precedes(98.6)\u003c/code\u003eもコンパイルエラーになり、Doubleに意図しないメソッドを生やさずに全体的に整合感のある挙動になります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"nl\"\u003eSelf\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eComparable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eprecedes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kt\"\u003eSelf\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eother\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"より厳密な指定に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%88%E3%82%8A%E5%8E%B3%E5%AF%86%E3%81%AA%E6%8C%87%E5%AE%9A%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eより厳密な指定に\u003c/h2\u003e\n\n\u003cp\u003e普通にジェネリクスで厳密に型を指定するとこうなるようです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003eC\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCollectionType\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIndex\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomAccessIndexType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGenerator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nl\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003esortedKeys\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eforKey\u003c/span\u003e \u003cspan class=\"nl\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGenerator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eかなり見にくいですが、Protocol Extensionを活用すると、少し目に優しくなります(　´･‿･｀)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextension\u003c/span\u003e \u003cspan class=\"n\"\u003eCollectionType\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"n\"\u003eIndex\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomAccessIndexType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"n\"\u003eGenerator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nl\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eforKey\u003c/span\u003e \u003cspan class=\"nl\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGenerator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// ...\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// 呼び出しもメソッドライクに(　´･‿･｀)\u003c/span\u003e\n\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003eposition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003ebinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eかなり\"Protocol Oriented\"な雰囲気がしてきました(　´･‿･｀)\u003c/p\u003e\n\n\u003cp\u003e※: おそらくWWDCの時からの仕様変更で\u003ccode\u003eRandomAccessIndexType\u003c/code\u003e部分でコンパイルエラー(\u003ccode\u003eerror: same-type constraint type 'RandomAccessIndexType' does not conform to required protocol 'ForwardIndexType'\u003c/code\u003e)が発生します。原因分かったら反映します。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"プロトコルを実装するとたくさんのデフォルト実装がくっついてくる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B%E3%81%A8%E3%81%9F%E3%81%8F%E3%81%95%E3%82%93%E3%81%AE%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E5%AE%9F%E8%A3%85%E3%81%8C%E3%81%8F%E3%81%A3%E3%81%A4%E3%81%84%E3%81%A6%E3%81%8F%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプロトコルを実装するとたくさんのデフォルト実装がくっついてくる\u003c/h1\u003e\n\n\u003cp\u003e例えば、このようにOptionalSetTypeを実装すると、こういうSet系のメソッドが付いてきます。\u003cbr\u003e\nこれらはProtocol Extensionsで実装されたメソッド群です。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-image-store.s3.amazonaws.com/0/19398/9730f31b-729a-d77c-49bf-55b33e15c91d.png\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/19398/9730f31b-729a-d77c-49bf-55b33e15c91d.png\" alt=\"Screen Shot 2015-09-19 at 8.09.04 PM.png\" title=\"Screen Shot 2015-09-19 at 8.09.04 PM.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eちなみに、OptionSetTypeはこういう定義ですが、RawRepresentableで定義されたデフォルト定義の無い\u003ccode\u003epublic var rawValue: Self.RawValue { get }\u003c/code\u003eを満たすために、上のような実装となっているようです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003epublic protocol OptionSetType : SetAlgebraType, RawRepresentable {\n    /// An `OptionSet`'s `Element` type is normally `Self`.\n    typealias Element = Self\n    /// Convert from a value of `RawValue`, succeeding unconditionally.\n    public init(rawValue: Self.RawValue)\n}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"equatableサポート\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#equatable%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eEquatableサポート\u003c/h1\u003e\n\n\u003cp\u003eこの後、\u003ca href=\"http://qiita.com/mono0926/items/bb52e657df6978713334#%E5%9B%B3%E5%BD%A2%E3%82%92%E6%8F%8F%E3%81%8F%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E4%BE%8B%E3%81%AB%E3%81%A8%E3%81%A3%E3%81%9F%E8%AA%AC%E6%98%8E\"\u003e図形を描くコードを例にとった説明\u003c/a\u003eで定義したstructの等価比較についての話になりましたが、ここはなかなか難しい + ボリューミーでややこしいので、ちょっと力尽きてしまいました。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/mono0926/items/bb52e657df6978713334#%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB%E3%81%A7%E5%AE%9A%E7%BE%A9%E3%81%97%E3%81%9F%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%AE%E5%BC%95%E6%95%B0%E3%81%AE%E5%9E%8B%E3%82%92self%E3%81%AB%E3%81%99%E3%82%8B%E3%81%8B%E3%81%A9%E3%81%86%E3%81%8B%E3%81%AE%E9%81%95%E3%81%84\"\u003eプロトコルで定義したメソッドの引数の型をSelfにするかどうかの違い\u003c/a\u003eで書いた内容に関連があるのですが、型が厳密なのでイコール比較の際にそれを理解した上でちょっとした回避策を取る必要のある場面がある、というような内容です。\u003c/p\u003e\n\n\u003cp\u003e追記するかもしれませんが、とりあえずセッションご覧下さい。\u003c/p\u003e\n","body":"\n最近、Swift 2で提唱されているProtocol Oriented Programmingの理解がちょっと自信なくて、色々記事見つつも今いち掴めた気がしなかったので、原典であろうWWDCでそれを提唱していたセッションを見たところ、かなりすっきりした気がします。\nセッション: [Protocol-Oriented Programming in Swift - WWDC 2015 - Videos - Apple Developer](https://developer.apple.com/videos/wwdc/2015/?id=408)\n\nセッション冒頭は、クラス vs Protocolの話で知りたいこととちょっとズレていたのでそれはスキップしてます。\nそのあたりは、[Building Better Apps with Value Types in Swift - WWDC 2015 - Videos - Apple Developer](https://developer.apple.com/videos/wwdc/2015/?id=414) の方が手厚そうなので、近々同じような感じで理解深めておきたいと思っています。\n\n# まずはイケてないコード\n\n```swift\nclass Ordered {\n    func precedes(other: Ordered) -\u003e Bool { fatalError(\"implement me!\") } // 1\n}\n\nclass Number: Ordered {\n    var value: Double = 0\n    override func precedes(other: Ordered) -\u003e Bool {\n        return value \u003c (other as! Number).value // 2\n    }\n}\n```\n\n## 1. `fatalError(\"implement me!\")`がイケてない\n\n特にSwiftは抽象クラスが無いので、こういう基底クラス的なものを作ると、イケてなさが目立ちますね。\n\n## 2. `other as! Number`でダウンキャストしている。\n\n型の恩恵を殺しています(´・︵・｀)\n\n\nセッションでは、\"code smell\"という表現で、このコードのイケてなさが表現されています。\n\n# 改善後\n\n```swift\nprotocol Ordered { // 1\n    func precedes(other: Self) -\u003e Bool // 2\n}\n\nstruct Number: Ordered { // 3\n    var value: Double = 0\n    func precedes(other: Number) -\u003e Bool { // 1\n        return value \u003c other.value // 2\n    }\n}\n```\n\n## 1. classからprotocolに変更\n\n実装を抜くことが可能になります。\nさらにNumberでのメソッド定義も、overrideは不要となります。\n\n## 2. 受け取る型を`Self`に\n\nNumberの実装で、Number型で受けられるようになり、ダウンキャストが無くなりました。\n\n## 3. structに変更\n\nこれは明確な理由が述べられて無さそうに聞こえました。\n冒頭で、参照型だとバグが生まれやすいなどの理由で、値型を推していたのでその一貫な気がします。\n\n# バイナリサーチ関数に使う例\n\n```swift\nfunc binarySearch(sortedKeys: [Ordered], forKey k: Ordered) -\u003e Int { // 1\n    var lo = 0\n    var hi = sortedKeys.count\n    while hi \u003e lo {\n        let mid = lo + (hi - lo) / 2\n        if sortedKeys[mid].precedes(k) { // 2\n            lo = mid + 1\n        } else {\n            hi = mid\n        }\n    }\n    return lo\n}\n```\n\n## コンパイルエラー発生\n\n一見良い例に見えますが、まだこのままではコンパイルエラーが発生します。\n\n- `1: error: protocol 'Ordered' can only be used as a generic constraint because it has Self or associated type requirements`\n- `2: error: member 'precedes' cannot be used on value of protocol type 'Ordered'; use a generic constraint instead`\n\n見ての通り、OrderedプロトコルのprecedesメソッドがSelfを受けることが原因とのことです。\nなぜ、これがダメなのかというと、Orderedは、Number以外もあり得るからです。\n\n```swift\nstruct Label: Ordered {\n    var value = \"\"\n    func precedes(other: Label) -\u003e Bool {\n        return value \u003c other.value\n    }\n}\n```\n\nこういった、Labelというstructがあった時、それがsortedKeysに渡されると、LabelとNumberを比較することになってしまいます。\nこれは解決不能です。\n\n## ジェネリクスで解決\n\nつまり、Orderedプロトコルを実装しているものであれば、何でも良いが、ただしそれは全て同じ型(セッションではhomogeniousと表現されている)である必要があります。\n\nこれは、このようにジェネリクスで表現出来ます。無事コンパイルエラーが解決しました(　´･‿･｀)\n\n```swift\nfunc binarySearch\u003cT: Ordered\u003e(sortedKeys: [T], forKey k: T) -\u003e Int {\n    var lo = 0\n    var hi = sortedKeys.count\n    while hi \u003e lo {\n        let mid = lo + (hi - lo) / 2\n        if sortedKeys[mid].precedes(k) {\n            lo = mid + 1\n        } else {\n            hi = mid\n        }\n    }\n    return lo\n}\n```\n\n## プロトコルで定義したメソッドの引数の型をSelfにするかどうかの違い\n\n今のコンパイルエラーは、SelfにせずOrderedという具体的な型を指定していたら発生しませんでした。\nそれが良いことかという言うと逆で、型が入り交じった場合ダウンキャストのところで実行時エラーが発生します。\n`Self`指定としたことでそれをコンパイルエラーによって未然に防げるようになったわけです。\n\nセッションのこの表がとても分かりやすいです。\n\n![Screen Shot 2015-09-19 at 4.40.49 PM.png](https://qiita-image-store.s3.amazonaws.com/0/19398/a3d11888-21ab-9121-e564-0a641a0c7bf7.png \"Screen Shot 2015-09-19 at 4.40.49 PM.png\")\n\n\n# 図形を描くコードを例にとった説明\n\n## まず初めのコード\n\n```swift\n// 図形などの定義\nstruct Renderer {\n    func moveTo(p: CGPoint) { print(\"moveTo(\\(p.x), \\(p.y))\") }\n    func lineTo(p: CGPoint) { print(\"lineTo(\\(p.x), \\(p.y))\") }\n    func arcAt(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat) {\n        print(\"arcAt(\\(center), radius: \\(radius), startAngle: \\(startAngle), endAngle: \\(endAngle))\")\n    }\n}\n\nprotocol Drawable {\n    func draw(renderer: Renderer)\n}\n\nstruct Polygon: Drawable {\n    func draw(renderer: Renderer) {\n        renderer.moveTo(corners.last!)\n        for p in corners {\n            renderer.lineTo(p)\n        }\n    }\n    var corners: [CGPoint] = []\n}\n\nstruct Circle: Drawable {\n    func draw(renderer: Renderer) {\n        renderer.arcAt(center, radius: radius, startAngle: 0, endAngle: CGFloat(M_PI * 2))\n    }\n    var center: CGPoint\n    var radius: CGFloat\n}\n\nstruct Diagram: Drawable {\n    func draw(renderer: Renderer) {\n        for f in elements {\n            f.draw(renderer)\n        }\n    }\n    var elements: [Drawable] = []\n}\n\n// テストコード\nvar circle = Circle(center: CGPoint(x: 187.5, y: 333.5), radius: 93.75)\n\nvar triangle = Polygon(corners: [\n    CGPoint(x: 187.5, y: 427.25),\n    CGPoint(x: 268.69, y: 286.625),\n    CGPoint(x: 106.31, y: 286.625)\n    ])\n\nvar diagram = Diagram(elements: [circle, triangle])\n\ndiagram.draw(Renderer())\n```\n\nこういうログが吐かれて、円と三角形が描かれているようなことが何となく分かる\n\n```\narcAt((187.5, 333.5), radius: 93.75, startAngle: 0.0, endAngle: 6.28318530717959)\nmoveTo(106.31, 286.625)\nlineTo(187.5, 427.25)\nlineTo(268.69, 286.625)\nlineTo(106.31, 286.625)\n```\n\n## 実際の描画が見たい、と言われて変更\n\nというわけで変更してみましょう。\nまずは、Rendererをprotocolに変えて実装を削って、代わりにTestRendererに移しましょう。\n\n```swift\nprotocol Renderer {\n    func moveTo(p: CGPoint)\n    func lineTo(p: CGPoint)\n    func arcAt(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat)\n}\n\nstruct TestRenderer: Renderer {\n    func moveTo(p: CGPoint) { print(\"moveTo(\\(p.x), \\(p.y))\") }\n    func lineTo(p: CGPoint) { print(\"lineTo(\\(p.x), \\(p.y))\") }\n    func arcAt(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat) {\n        print(\"arcAt(\\(center), radius: \\(radius), startAngle: \\(startAngle), endAngle: \\(endAngle))\")\n    }\n}\n```\n\nさらに、実行部分はこうすると、とりあえず先ほどの挙動は維持出来ました。\n\n```swift\ndiagram.draw(TestRenderer())\n```\n\nさらに、実際に描画してみましょう。\nRendererを実装したCGContextを定義するだけで簡単に出来てしまいます。\nprotocol orientedの強力さが分かった気がします(　´･‿･｀)\n\n```swift\nextension CGContext: Renderer {\n    func moveTo(p: CGPoint) {\n        CGContextMoveToPoint(self, p.x, p.y)\n    }\n    func lineTo(p: CGPoint) {\n        CGContextAddLineToPoint(self, p.x, p.y)\n    }\n    func arcAt(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat) {\n        let arc = CGPathCreateMutable()\n        CGPathAddArc(arc, nil, center.x, center.y, radius, startAngle, endAngle, true)\n        CGContextAddPath(self, arc)\n    }\n}\n```\n\n実行はこうです。\n\n```\nshowCoreGraphicsDiagram(\"title\", size: CGSizeMake(400, 600)) { diagram.draw($0) }\n```\n\nPlaygroundでのCGContext描画のために、 https://developer.apple.com/sample-code/wwdc/2015/downloads/Crustacean.zip のヘルパーメソッドも必要です。\n\n# 他のの図形を表現可能とするためにRendererを拡張\n\n## 指定箇所に円を描く`circleAt`の定義を足します。\n\n```swift\nprotocol Renderer {\n    func moveTo(p: CGPoint)\n    func lineTo(p: CGPoint)\n    func arcAt(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat)\n    func circleAt(center: CGPoint, radius: CGFloat)\n}\n\nstruct TestRenderer: Renderer {\n    func moveTo(p: CGPoint) { print(\"moveTo(\\(p.x), \\(p.y))\") }\n    func lineTo(p: CGPoint) { print(\"lineTo(\\(p.x), \\(p.y))\") }\n    func arcAt(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat) {\n        print(\"arcAt(\\(center), radius: \\(radius), startAngle: \\(startAngle), endAngle: \\(endAngle))\")\n    }\n    func circleAt(center: CGPoint, radius: CGFloat) {\n        arcAt(center, radius: radius, startAngle: 0, endAngle: CGFloat(M_PI * 2))\n    }\n}\n\nextension CGContext: Renderer {\n    func moveTo(p: CGPoint) {\n        CGContextMoveToPoint(self, p.x, p.y)\n    }\n    func lineTo(p: CGPoint) {\n        CGContextAddLineToPoint(self, p.x, p.y)\n    }\n    func arcAt(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat) {\n        let arc = CGPathCreateMutable()\n        CGPathAddArc(arc, nil, center.x, center.y, radius, startAngle, endAngle, true)\n        CGContextAddPath(self, arc)\n    }\n    func circleAt(center: CGPoint, radius: CGFloat) {\n        arcAt(center, radius: radius, startAngle: 0, endAngle: CGFloat(M_PI * 2))\n    }\n}\n```\n\n`TestRenderer`と`CGContext`に、`circleAt`のコピペ実装が発生してしまいました(´・︵・｀)\n\n## ここでSwift 2の`Protocol Extensions`\n\nこのようにRenderを拡張して`circleAt`を実装しましょう。\n\n```swift\nprotocol Renderer {\n    func moveTo(p: CGPoint)\n    func lineTo(p: CGPoint)\n    func arcAt(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat)\n    func circleAt(center: CGPoint, radius: CGFloat)\n}\n\nextension Renderer {\n    func circleAt(center: CGPoint, radius: CGFloat) {\n        arcAt(center, radius: radius, startAngle: 0, endAngle: CGFloat(M_PI * 2))\n    }\n}\n```\n\n`TestRenderer`と`CGContext`に、`circleAt`のコピペ実装は削除しましょうʕ ·ᴥ·ʔ\nすっきりしました(　´･‿･｀)\n\nSwiftは抽象クラス無いですが、それを`protocol`と`protocol extension`の組み合わせですっきり実現されていると、僕は感じています。\n抽象クラスがある言語だと、Interface使うか抽象クラス使うべきか迷う、みたいな声を良く聞きますが、Swiftだと\n\n- Protocolでインターフェースを定義\n- 必要ならProtocolを拡張してデフォルト実装を埋め込む\n\nという感じですっきり解決出来ます。\nそこの役割が言語レベルで明確に分けられているのが筋が良いと思います。\n\n# CollectionTypeのindexOfメソッドを実装する例\n\n## コンパイルエラーになってしまうもの\n\n```swift\nextension CollectionType {\n    public func indexOf(element: Generator.Element) -\u003e Index? {\n        for i in indices {\n            if self[i] == element { // エラー\n                return i\n            }\n        }\n        return nil\n    }\n}\n```\n\n`error: binary operator '==' cannot be applied to two 'Self.Generator.Element' operands`というエラーが発生してしまいました(´・︵・｀)\n\n## 解決(　´･‿･｀)\n\n`where Generator.Element: Equatable`の拘束条件を付けることで、`Generator.Element`が`Equatable`(`==`評価可能なもの)に限定でき、上記のコンパイルエラーが解決します。\n\n```swift\nextension CollectionType where Generator.Element: Equatable {\n    public func indexOf(element: Generator.Element) -\u003e Index? {\n        for i in indices {\n            if self[i] == element { \n                return i\n            }\n        }\n        return nil\n    }\n}\n```\n\n# バイナリサーチの例に戻ってProtocol Extensionsを活用\n\n## `binarySearch`を呼んでみる\n\n```swift\nlet position = binarySearch([1, 2, 3, 4], forKey: 2)\n```\n\n`expected an argument list of type '([T], forKey: T)'`のエラーが出ます。\nIntはOrderedプロトコルに従ってないので、仕方ないですね(´・︵・｀)\n\nIntを拡張すれば解決します(　´･‿･｀)\n\n```swift\n\nextension Int: Ordered {\n    func precedes(other: Int) -\u003e Bool {\n        return self \u003c other\n    }\n}\n```\n\nこの勢いで`String`も拡張しちゃいましょう(　´･‿･｀)\n\n```swift\nextension String: Ordered {\n    func precedes(other: String) -\u003e Bool {\n        return self \u003c other\n    }\n}\n\nlet position = binarySearch([\"1\", \"2\", \"3\", \"4\"], forKey: \"2\")\n```\n\nなんか、イヤな感じがしてきましたね(´・︵・｀)\n\n## 重複実装を無くしましょう\n\nIntやStringはComparableを実装しているので、このように定義すれば、Int・StringはOrderedにさえ従っていれば良いです。\nかなりマシになりましたね。\n\n```swift\nextension Comparable {\n    func precedes(other: Self) -\u003e Bool {\n        return self \u003c other\n    }\n}\nextension Int: Ordered {}\nextension String: Ordered {}\n```\n\n### Orderedに従う必要ないのでは？\n\nそもそも、`Comparable`に従っているものが`func precedes(other: Self) -\u003e Bool`を実装していることが宣言されているならば、`extension Int: Ordered {}`などの記述は冗長なのでは？とも思ってきます。\nしかし、`extension Int: Ordered {}`を削るとコンパイルエラーになります。\n\n```swift\nerror: cannot invoke 'binarySearch' with an argument list of type '([Int], forKey: Int)'\n```\n\nSwiftは、構造的部分型(ダックタイピングに近いけどコンパイル時に確定するものみたいな感じ)の発想は取り入れていないということだと思います。\n\n## ちぐはぐな挙動を改善\n\n例えば、DoubleもComparableを実装しているので、これはコンパイルが通ります。\n\n```swift\nlet truth = 3.14.precedes(98.6)\n```\n\n一方、こちらは\n\n```swift\nlet position = binarySearch([1.0, 2.0, 3.0, 4.0], forKey: 2.0)\n```\n\n`error: cannot invoke 'binarySearch' with an argument list of type '([Double], forKey: Double)'`というコンパイルエラーになります。\n\nそもそもDoubleに`precedes`メソッドを生やす気が無いなら、Comparableの拡張を限定的にしましょう。\n\nこのように定義すれば、`let truth = 3.14.precedes(98.6)`もコンパイルエラーになり、Doubleに意図しないメソッドを生やさずに全体的に整合感のある挙動になります。\n\n```swift\nextension Ordered where Self: Comparable {\n    func precedes(other: Self) -\u003e Bool {\n        return self \u003c other\n    }\n}\n```\n\n## より厳密な指定に\n\n普通にジェネリクスで厳密に型を指定するとこうなるようです。\n\n```swift\nfunc binarySearch\u003c\n    C: CollectionType where C.Index == RandomAccessIndexType,\n    C.Generator.Element: Ordered\n    \u003e(sortedKeys: C, forKey k: C.Generator.Element) -\u003e Int {\n    // ...\n}\n```\n\nかなり見にくいですが、Protocol Extensionを活用すると、少し目に優しくなります(　´･‿･｀)\n\n```swift\nextension CollectionType where Index == RandomAccessIndexType,\nGenerator.Element: Ordered {\n    func binarySearch(forKey k: C.Generator.Element) -\u003e Int {\n        // ...\n    }\n}\n// 呼び出しもメソッドライクに(　´･‿･｀)\nlet position = [1, 2, 3, 4].binarySearch(2)\n```\n\nかなり\"Protocol Oriented\"な雰囲気がしてきました(　´･‿･｀)\n\n※: おそらくWWDCの時からの仕様変更で`RandomAccessIndexType`部分でコンパイルエラー(`error: same-type constraint type 'RandomAccessIndexType' does not conform to required protocol 'ForwardIndexType'`)が発生します。原因分かったら反映します。\n\n# プロトコルを実装するとたくさんのデフォルト実装がくっついてくる\n\n例えば、このようにOptionalSetTypeを実装すると、こういうSet系のメソッドが付いてきます。\nこれらはProtocol Extensionsで実装されたメソッド群です。\n\n![Screen Shot 2015-09-19 at 8.09.04 PM.png](https://qiita-image-store.s3.amazonaws.com/0/19398/9730f31b-729a-d77c-49bf-55b33e15c91d.png \"Screen Shot 2015-09-19 at 8.09.04 PM.png\")\n\nちなみに、OptionSetTypeはこういう定義ですが、RawRepresentableで定義されたデフォルト定義の無い`public var rawValue: Self.RawValue { get }`を満たすために、上のような実装となっているようです。\n\n```\npublic protocol OptionSetType : SetAlgebraType, RawRepresentable {\n    /// An `OptionSet`'s `Element` type is normally `Self`.\n    typealias Element = Self\n    /// Convert from a value of `RawValue`, succeeding unconditionally.\n    public init(rawValue: Self.RawValue)\n}\n```\n\n\n\n# Equatableサポート\n\nこの後、[図形を描くコードを例にとった説明](http://qiita.com/mono0926/items/bb52e657df6978713334#図形を描くコードを例にとった説明)で定義したstructの等価比較についての話になりましたが、ここはなかなか難しい + ボリューミーでややこしいので、ちょっと力尽きてしまいました。\n[プロトコルで定義したメソッドの引数の型をSelfにするかどうかの違い](http://qiita.com/mono0926/items/bb52e657df6978713334#プロトコルで定義したメソッドの引数の型をselfにするかどうかの違い)で書いた内容に関連があるのですが、型が厳密なのでイコール比較の際にそれを理解した上でちょっとした回避策を取る必要のある場面がある、というような内容です。\n\n追記するかもしれませんが、とりあえずセッションご覧下さい。\n\n","coediting":false,"created_at":"2015-09-20T06:58:27+09:00","id":"bb52e657df6978713334","private":false,"tags":[{"name":"iOS","versions":[]},{"name":"Protocol","versions":[]},{"name":"Swift","versions":[]},{"name":"Swift2","versions":[]}],"title":"Swift 2で提唱されているProtocol Oriented ProgrammingをWWDCセッションから学ぶ","updated_at":"2015-09-20T07:02:09+09:00","url":"http://qiita.com/mono0926/items/bb52e657df6978713334","user":{"description":"Swiftも書けるスタンプ職人(　´･‿･｀)\r\nhttps://store.line.me/stickershop/product/1000854/ja\r\n\r\n今開発中のPlayer!:\r\nhttps://itunes.apple.com/jp/app/id897872395","facebook_id":"mono0926","followees_count":134,"followers_count":235,"github_login_name":"mono0926","id":"mono0926","items_count":58,"linkedin_id":"155419528\u0026trk=tab_pro","location":"Tokyo, Japan","name":"Masayuki Ono","organization":"ookami, Inc.","permanent_id":19398,"profile_image_url":"https://secure.gravatar.com/avatar/1b82fbf7f0d8bd6b680fbcf5544cec96?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","twitter_screen_name":"_mono","website_url":"http://mono0926.com/"}},{"rendered_body":"\u003cp\u003e\u003ca href=\"https://www.reddit.com/3lludg/\"\u003eNorth Carolina Central vs Florida Intl Live\u003c/a\u003e\u003c/p\u003e\n","body":"[North Carolina Central vs Florida Intl Live](https://www.reddit.com/3lludg/)\n","coediting":false,"created_at":"2015-09-20T06:55:44+09:00","id":"acaff33a4b2ab84faf95","private":false,"tags":[{"name":"vs","versions":[]},{"name":"Carolina","versions":[]},{"name":"North","versions":[]},{"name":"Central","versions":[]},{"name":"Florida","versions":[]}],"title":"North Carolina Central vs Florida Intl Live","updated_at":"2015-09-20T06:55:44+09:00","url":"http://qiita.com/amikala/items/acaff33a4b2ab84faf95","user":{"description":"Canada\" vs \"Ireland Live-Streaming\r\nhttps://www.reddit.com/3ljs1m/\r\n","facebook_id":"","followees_count":0,"followers_count":0,"github_login_name":null,"id":"amikala","items_count":11,"linkedin_id":"","location":"","name":"Canada\" vs \"Ireland Live-Streaming","organization":"","permanent_id":93983,"profile_image_url":"https://secure.gravatar.com/avatar/86b9630e0dbe5d81077683844b6aa305","twitter_screen_name":null,"website_url":"https://www.reddit.com/3ljs1m/"}},{"rendered_body":"\u003cp\u003e引用: 冠詞マスター教本 by 石井隆之さん\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eclothesは「衣服、着物」という意味の単語で複数扱い。\u003cbr\u003e\n...\u003cbr\u003e\ntwo suits of clothes (服二着）というような表現にする。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003c/p\u003e\u003chr\u003e\u003cbr\u003e\n衣服の3DCG作成などに使われるシミュレーターは cloth simulator (cloth simulation)のようだ。\n\n\u003cp\u003e\u003ca href=\"https://github.com/derekblair/ClothSimulator\"\u003ehttps://github.com/derekblair/ClothSimulator\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA native OSX app that demonstrates real time cloth simulation using OpenGL and advanced algorithms.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003egithubにて「clothes simulator」では検索結果0だった。\u003c/p\u003e\n","body":"引用: 冠詞マスター教本 by 石井隆之さん\n\n\u003e clothesは「衣服、着物」という意味の単語で複数扱い。\n...\ntwo suits of clothes (服二着）というような表現にする。\n\n\u003chr\u003e\n衣服の3DCG作成などに使われるシミュレーターは cloth simulator (cloth simulation)のようだ。\n\nhttps://github.com/derekblair/ClothSimulator\n\u003e A native OSX app that demonstrates real time cloth simulation using OpenGL and advanced algorithms.\n\ngithubにて「clothes simulator」では検索結果0だった。\n\n","coediting":false,"created_at":"2015-09-20T06:43:36+09:00","id":"d5243cd18436cffff813","private":false,"tags":[{"name":"TechEnglish","versions":[]}],"title":"技術英語 \u003e two suits of clothes / cloth simulator","updated_at":"2015-09-20T06:43:36+09:00","url":"http://qiita.com/7of9/items/d5243cd18436cffff813","user":{"description":"セブンオブナインです。\r\nUnimatrix 01の第三付属物 9の7という識別番号です。Star trek Voyagerの好きなキャラクターです。\r\n\r\nまとめ記事は後日タイトルから内容がわからなくなるため、title検索で見つかるよう個々の記事にしてます。\r\n\r\nいわゆるBorg集合体の有名なセリフから「お前たち（の知識）を吸収する。抵抗は無意味だ」。Thanks in advance.","facebook_id":"","followees_count":7,"followers_count":28,"github_login_name":"yasokada","id":"7of9","items_count":1053,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":32870,"profile_image_url":"https://avatars.githubusercontent.com/u/2020561?v=3","twitter_screen_name":null,"website_url":""}}]